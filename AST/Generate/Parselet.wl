
(*
std::array<PrefixParseletPtr, TOKEN`COUNT.value[]> prefixParselets;
std::array<InfixParseletPtr, TOKEN`COUNT.value[]> infixParselets;
#if STARTOFLINE
std::array<StartOfLineParseletPtr>, TOKEN`COUNT> startOfLineParselets;
std::array<StartOfFileParseletPtr, TOKEN`COUNT> startOfFileParselets;
#endif // STARTOFLINE

ContextSensitivePrefixParseletPtr contextSensitiveSymbolParselet;
ContextSensitiveInfixParseletPtr contextSensitiveUnder1Parselet;
ContextSensitiveInfixParseletPtr contextSensitiveUnder2Parselet;
ContextSensitiveInfixParseletPtr contextSensitiveUnder3Parselet;
ContextSensitiveInfixParseletPtr contextSensitiveColonParselet;



prefixParselets(]
infixParselets(]
contextSensitiveSymbolParselet(ContextSensitivePrefixParseletPtr(SymbolParselet[])]
contextSensitiveUnder1Parselet(ContextSensitiveInfixParseletPtr(UnderParselet(1))]
contextSensitiveUnder2Parselet(ContextSensitiveInfixParseletPtr(UnderParselet(2))]
contextSensitiveUnder3Parselet(ContextSensitiveInfixParseletPtr(UnderParselet(3))]
contextSensitiveColonParselet(ContextSensitiveInfixParseletPtr(ColonParselet[])]
*)





PrefixOperatorToParselet[TOKEN`MINUS] = PrefixOperatorParselet[TOKEN`MINUS, PRECEDENCE`PREFIX`MINUS]
PrefixOperatorToParselet[TOKEN`PLUS] = PrefixOperatorParselet[TOKEN`PLUS, PRECEDENCE`PREFIX`PLUS]
PrefixOperatorToParselet[TOKEN`BANG] = PrefixOperatorParselet[TOKEN`BANG, PRECEDENCE`PREFIX`BANG]
PrefixOperatorToParselet[TOKEN`PLUSPLUS] = PrefixOperatorParselet[TOKEN`PLUSPLUS, PRECEDENCE`PREFIX`PLUSPLUS]
PrefixOperatorToParselet[TOKEN`MINUSMINUS] = PrefixOperatorParselet[TOKEN`MINUSMINUS, PRECEDENCE`PREFIX`MINUSMINUS]
PrefixOperatorToParselet[TOKEN`LONGNAME`PLUSMINUS] = PrefixOperatorParselet[TOKEN`LONGNAME`PLUSMINUS, PRECEDENCE`PREFIX`LONGNAME`PLUSMINUS]
PrefixOperatorToParselet[TOKEN`LONGNAME`SUM] = PrefixOperatorParselet[TOKEN`LONGNAME`SUM, PRECEDENCE`LONGNAME`SUM]
PrefixOperatorToParselet[TOKEN`LONGNAME`NOT] = PrefixOperatorParselet[TOKEN`LONGNAME`NOT, PRECEDENCE`LONGNAME`NOT]
PrefixOperatorToParselet[TOKEN`LONGNAME`SQRT] = PrefixOperatorParselet[TOKEN`LONGNAME`SQRT, PRECEDENCE`LONGNAME`SQRT]
PrefixOperatorToParselet[TOKEN`LONGNAME`MINUSPLUS] = PrefixOperatorParselet[TOKEN`LONGNAME`MINUSPLUS, PRECEDENCE`PREFIX`LONGNAME`MINUSPLUS]
PrefixOperatorToParselet[TOKEN`LONGNAME`DIFFERENTIALD] = PrefixOperatorParselet[TOKEN`LONGNAME`DIFFERENTIALD, PRECEDENCE`LONGNAME`DIFFERENTIALD]
PrefixOperatorToParselet[TOKEN`LONGNAME`CAPITALDIFFERENTIALD] = PrefixOperatorParselet[TOKEN`LONGNAME`CAPITALDIFFERENTIALD, PRECEDENCE`LONGNAME`CAPITALDIFFERENTIALD]
PrefixOperatorToParselet[TOKEN`LONGNAME`MINUS] = PrefixOperatorParselet[TOKEN`LONGNAME`MINUS, PRECEDENCE`PREFIX`LONGNAME`MINUS]
PrefixOperatorToParselet[TOKEN`LONGNAME`DEL] = PrefixOperatorParselet[TOKEN`LONGNAME`DEL, PRECEDENCE`LONGNAME`DEL]
PrefixOperatorToParselet[TOKEN`LONGNAME`SQUARE] = PrefixOperatorParselet[TOKEN`LONGNAME`SQUARE, PRECEDENCE`LONGNAME`SQUARE]


(*
Integration operators
*)
PrefixOperatorToParselet[TOKEN`LONGNAME`CONTOURINTEGRAL] = PrefixOperatorParselet[TOKEN`LONGNAME`CONTOURINTEGRAL, PRECEDENCE`CLASS`INTEGRATIONOPERATORS]
PrefixOperatorToParselet[TOKEN`LONGNAME`DOUBLECONTOURINTEGRAL] = PrefixOperatorParselet[TOKEN`LONGNAME`DOUBLECONTOURINTEGRAL, PRECEDENCE`CLASS`INTEGRATIONOPERATORS]
PrefixOperatorToParselet[TOKEN`LONGNAME`CLOCKWISECONTOURINTEGRAL] = PrefixOperatorParselet[TOKEN`LONGNAME`CLOCKWISECONTOURINTEGRAL, PRECEDENCE`CLASS`INTEGRATIONOPERATORS]
PrefixOperatorToParselet[TOKEN`LONGNAME`COUNTERCLOCKWISECONTOURINTEGRAL] = PrefixOperatorParselet[TOKEN`LONGNAME`COUNTERCLOCKWISECONTOURINTEGRAL, PRECEDENCE`CLASS`INTEGRATIONOPERATORS]


PrefixOperatorToParselet[TOKEN`LONGNAME`PRODUCT] = PrefixOperatorParselet[TOKEN`LONGNAME`PRODUCT, PRECEDENCE`LONGNAME`PRODUCT]
PrefixOperatorToParselet[TOKEN`LONGNAME`CONTINUEDFRACTIONK] = PrefixOperatorParselet[TOKEN`LONGNAME`CONTINUEDFRACTIONK, PRECEDENCE`LONGNAME`CONTINUEDFRACTIONK]
PrefixOperatorToParselet[TOKEN`LONGNAME`CIRCLETIMES] = PrefixOperatorParselet[TOKEN`LONGNAME`CIRCLETIMES, PRECEDENCE`PREFIX`LONGNAME`CIRCLETIMES]
PrefixOperatorToParselet[TOKEN`LONGNAME`FORALL] = PrefixOperatorParselet[TOKEN`LONGNAME`FORALL, PRECEDENCE`LONGNAME`FORALL]
PrefixOperatorToParselet[TOKEN`LONGNAME`EXISTS] = PrefixOperatorParselet[TOKEN`LONGNAME`EXISTS, PRECEDENCE`LONGNAME`EXISTS]
PrefixOperatorToParselet[TOKEN`LONGNAME`NOTEXISTS] = PrefixOperatorParselet[TOKEN`LONGNAME`NOTEXISTS, PRECEDENCE`LONGNAME`NOTEXISTS]
PrefixOperatorToParselet[TOKEN`LONGNAME`COPRODUCT] = PrefixOperatorParselet[TOKEN`LONGNAME`COPRODUCT, PRECEDENCE`PREFIX`LONGNAME`COPRODUCT]
PrefixOperatorToParselet[TOKEN`LONGNAME`PIECEWISE] = PrefixOperatorParselet[TOKEN`LONGNAME`PIECEWISE, PRECEDENCE`LONGNAME`PIECEWISE]
PrefixOperatorToParselet[TOKEN`LONGNAME`INVISIBLEPREFIXSCRIPTBASE] = PrefixOperatorParselet[TOKEN`LONGNAME`INVISIBLEPREFIXSCRIPTBASE, PRECEDENCE`LONGNAME`INVISIBLEPREFIXSCRIPTBASE]
PrefixOperatorToParselet[TOKEN`LONGNAME`EXPECTATIONE] = PrefixOperatorParselet[TOKEN`LONGNAME`EXPECTATIONE, PRECEDENCE`LONGNAME`EXPECTATIONE]
PrefixOperatorToParselet[TOKEN`LONGNAME`CUBEROOT] = PrefixOperatorParselet[TOKEN`LONGNAME`CUBEROOT, PRECEDENCE`LONGNAME`CUBEROOT]
PrefixOperatorToParselet[TOKEN`LONGNAME`PROBABILITYPR] = PrefixOperatorParselet[TOKEN`LONGNAME`PROBABILITYPR, PRECEDENCE`LONGNAME`PROBABILITYPR]
PrefixOperatorToParselet[TOKEN`BANGBANG] = PrefixOperatorParselet[TOKEN`BANGBANG, PRECEDENCE`FAKE`PREFIX`BANGBANG]
PrefixOperatorToParselet[TOKEN`LINEARSYNTAX`BANG] = PrefixOperatorParselet[TOKEN`LINEARSYNTAX`BANG, PRECEDENCE`LINEARSYNTAX`BANG]

(*
Groups
*)
PrefixOperatorToParselet[TOKEN`OPENPAREN] = GroupParselet[TOKEN`OPENPAREN]
PrefixOperatorToParselet[TOKEN`OPENSQUARE] = GroupParselet[TOKEN`OPENSQUARE]
PrefixOperatorToParselet[TOKEN`OPENCURLY] = GroupParselet[TOKEN`OPENCURLY]
PrefixOperatorToParselet[TOKEN`LESSBAR] = GroupParselet[TOKEN`LESSBAR]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTANGLEBRACKET] = GroupParselet[TOKEN`LONGNAME`LEFTANGLEBRACKET]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTCEILING] = GroupParselet[TOKEN`LONGNAME`LEFTCEILING]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTFLOOR] = GroupParselet[TOKEN`LONGNAME`LEFTFLOOR]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTDOUBLEBRACKET] = GroupParselet[TOKEN`LONGNAME`LEFTDOUBLEBRACKET]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTBRACKETINGBAR] = GroupParselet[TOKEN`LONGNAME`LEFTBRACKETINGBAR]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTDOUBLEBRACKETINGBAR] = GroupParselet[TOKEN`LONGNAME`LEFTDOUBLEBRACKETINGBAR]
PrefixOperatorToParselet[TOKEN`LONGNAME`LEFTASSOCIATION] = GroupParselet[TOKEN`LONGNAME`LEFTASSOCIATION]
PrefixOperatorToParselet[TOKEN`LONGNAME`OPENCURLYQUOTE] = GroupParselet[TOKEN`LONGNAME`OPENCURLYQUOTE]
PrefixOperatorToParselet[TOKEN`LONGNAME`OPENCURLYDOUBLEQUOTE] = GroupParselet[TOKEN`LONGNAME`OPENCURLYDOUBLEQUOTE]

(*
#if STARTOFLINE
//
// StartOfLine
//
registerStartOfLineParselet[TOKEN`QUESTION, StartOfLineParseletPtr(StartOfLineParselet[]));
registerStartOfLineParselet[TOKEN`QUESTIONQUESTION, StartOfLineParseletPtr(StartOfLineParselet[]));
//
// TODO: uncomment when there is support for different modes
//
//    registerStartOfLineParselet[TOKEN`BANG, StartOfLineParseletPtr(StartOfLineParselet[]));
//    registerStartOfLineParselet[TOKEN`BANGBANG, StartOfLineParseletPtr(StartOfLineParselet[]));

//
// StartOfFile
//
registerStartOfFileParselet[TOKEN`HASHBANG, StartOfFileParseletPtr(StartOfFileParselet[]));
#endif // STARTOFLINE
*)

(*
Special
*)

(*
context sensitive parsing of  x`
*)
PrefixOperatorToParselet[TOKEN`SYMBOL] = SymbolParselet[]

(*
context sensitive parsing of `x
*)
PrefixOperatorToParselet[TOKEN`UNDER] = UnderParselet[1]
PrefixOperatorToParselet[TOKEN`UNDERUNDER] = UnderParselet[2]
PrefixOperatorToParselet[TOKEN`UNDERUNDERUNDER] = UnderParselet[3]

(*
prefix, infix, postfix
*)
PrefixOperatorToParselet[TOKEN`SEMISEMI] = SemiSemiParselet[]

(*
FIXME: punt on parsing box syntax, reads tokens with no parsing
*)
PrefixOperatorToParselet[TOKEN`LINEARSYNTAX`OPENPAREN] = LinearSyntaxOpenParenParselet[]

(*
Has to handle \[Integral] f \[DifferentialD] x
*)
PrefixOperatorToParselet[TOKEN`LONGNAME`INTEGRAL] = IntegralParselet[]

(*
stringify next token (as a file]
*)
PrefixOperatorToParselet[TOKEN`LESSLESS] = LessLessParselet[]


PrefixOperatorToParselet[_] = LeafParselet[]




















(*
Infix
*)



(*
Binary
*)

InfixOperatorToParselet[TOKEN`SLASH] = BinaryOperatorParselet[TOKEN`SLASH, PRECEDENCE`SLASH, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`CARET] = BinaryOperatorParselet[TOKEN`CARET, PRECEDENCE`CARET, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`CARETEQUAL] = BinaryOperatorParselet[TOKEN`CARETEQUAL, PRECEDENCE`CARETEQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`CARETCOLONEQUAL] = BinaryOperatorParselet[TOKEN`CARETCOLONEQUAL, PRECEDENCE`CARETCOLONEQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`SLASHAT] = BinaryOperatorParselet[TOKEN`SLASHAT, PRECEDENCE`SLASHAT, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`MINUSGREATER] = BinaryOperatorParselet[TOKEN`MINUSGREATER, PRECEDENCE`MINUSGREATER, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`ATAT] = BinaryOperatorParselet[TOKEN`ATAT, PRECEDENCE`ATAT, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`SLASHSEMI] = BinaryOperatorParselet[TOKEN`SLASHSEMI, PRECEDENCE`SLASHSEMI, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`SLASHDOT] = BinaryOperatorParselet[TOKEN`SLASHDOT, PRECEDENCE`SLASHDOT, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`COLONGREATER] = BinaryOperatorParselet[TOKEN`COLONGREATER, PRECEDENCE`COLONGREATER, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`SLASHSLASHDOT] = BinaryOperatorParselet[TOKEN`SLASHSLASHDOT, PRECEDENCE`SLASHSLASHDOT, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`PLUSEQUAL] = BinaryOperatorParselet[TOKEN`PLUSEQUAL, PRECEDENCE`PLUSEQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`STAREQUAL] = BinaryOperatorParselet[TOKEN`STAREQUAL, PRECEDENCE`STAREQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`MINUSEQUAL] = BinaryOperatorParselet[TOKEN`MINUSEQUAL, PRECEDENCE`MINUSEQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`SLASHEQUAL] = BinaryOperatorParselet[TOKEN`SLASHEQUAL, PRECEDENCE`SLASHEQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LESSMINUSGREATER] = BinaryOperatorParselet[TOKEN`LESSMINUSGREATER, PRECEDENCE`LESSMINUSGREATER, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`SLASHSLASHAT] = BinaryOperatorParselet[TOKEN`SLASHSLASHAT, PRECEDENCE`SLASHSLASHAT, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`AT] = BinaryOperatorParselet[TOKEN`AT, PRECEDENCE`AT, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`ATATAT] = BinaryOperatorParselet[TOKEN`ATATAT, PRECEDENCE`ATATAT, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`SLASHSLASH] = BinaryOperatorParselet[TOKEN`SLASHSLASH, PRECEDENCE`SLASHSLASH, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`COLONEQUAL] = BinaryOperatorParselet[TOKEN`COLONEQUAL, PRECEDENCE`COLONEQUAL, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`QUESTION] = BinaryOperatorParselet[TOKEN`QUESTION, PRECEDENCE`INFIX`QUESTION, ASSOCIATIVITY`NONASSOCIATIVE]
InfixOperatorToParselet[TOKEN`LONGNAME`DIVIDE] = BinaryOperatorParselet[TOKEN`LONGNAME`DIVIDE, PRECEDENCE`LONGNAME`DIVIDE, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`DIVISIONSLASH] = BinaryOperatorParselet[TOKEN`LONGNAME`DIVISIONSLASH, PRECEDENCE`LONGNAME`DIVISIONSLASH, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`IMPLIES] = BinaryOperatorParselet[TOKEN`LONGNAME`IMPLIES, PRECEDENCE`LONGNAME`IMPLIES, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`ROUNDIMPLIES] = BinaryOperatorParselet[TOKEN`LONGNAME`ROUNDIMPLIES, PRECEDENCE`LONGNAME`ROUNDIMPLIES, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`PLUSMINUS] = BinaryOperatorParselet[TOKEN`LONGNAME`PLUSMINUS, PRECEDENCE`INFIX`LONGNAME`PLUSMINUS, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`DIRECTEDEDGE] = BinaryOperatorParselet[TOKEN`LONGNAME`DIRECTEDEDGE, PRECEDENCE`LONGNAME`DIRECTEDEDGE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`RULE] = BinaryOperatorParselet[TOKEN`LONGNAME`RULE, PRECEDENCE`LONGNAME`RULE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`RULEDELAYED] = BinaryOperatorParselet[TOKEN`LONGNAME`RULEDELAYED, PRECEDENCE`LONGNAME`RULEDELAYED, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`UNDIRECTEDEDGE] = BinaryOperatorParselet[TOKEN`LONGNAME`UNDIRECTEDEDGE, PRECEDENCE`LONGNAME`UNDIRECTEDEDGE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`FUNCTION] = BinaryOperatorParselet[TOKEN`LONGNAME`FUNCTION, PRECEDENCE`LONGNAME`FUNCTION, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`MINUSPLUS] = BinaryOperatorParselet[TOKEN`LONGNAME`MINUSPLUS, PRECEDENCE`INFIX`LONGNAME`MINUSPLUS, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`TWOWAYRULE] = BinaryOperatorParselet[TOKEN`LONGNAME`TWOWAYRULE, PRECEDENCE`LONGNAME`TWOWAYRULE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`INVISIBLEAPPLICATION] = BinaryOperatorParselet[TOKEN`LONGNAME`INVISIBLEAPPLICATION, PRECEDENCE`LONGNAME`INVISIBLEAPPLICATION, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`CIRCLEMINUS] = BinaryOperatorParselet[TOKEN`LONGNAME`CIRCLEMINUS, PRECEDENCE`LONGNAME`CIRCLEMINUS, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`SUCHTHAT] = BinaryOperatorParselet[TOKEN`LONGNAME`SUCHTHAT, PRECEDENCE`LONGNAME`SUCHTHAT, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`PERPENDICULAR] = BinaryOperatorParselet[TOKEN`LONGNAME`PERPENDICULAR, PRECEDENCE`LONGNAME`PERPENDICULAR, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`BECAUSE] = BinaryOperatorParselet[TOKEN`LONGNAME`BECAUSE, PRECEDENCE`LONGNAME`BECAUSE, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`THEREFORE] = BinaryOperatorParselet[TOKEN`LONGNAME`THEREFORE, PRECEDENCE`LONGNAME`THEREFORE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTTEE] = BinaryOperatorParselet[TOKEN`LONGNAME`RIGHTTEE, PRECEDENCE`LONGNAME`RIGHTTEE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTTEE] = BinaryOperatorParselet[TOKEN`LONGNAME`LEFTTEE, PRECEDENCE`LONGNAME`LEFTTEE, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLERIGHTTEE] = BinaryOperatorParselet[TOKEN`LONGNAME`DOUBLERIGHTTEE, PRECEDENCE`LONGNAME`DOUBLERIGHTTEE, ASSOCIATIVITY`RIGHT]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLELEFTTEE] = BinaryOperatorParselet[TOKEN`LONGNAME`DOUBLELEFTTEE, PRECEDENCE`LONGNAME`DOUBLELEFTTEE, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`UPTEE] = BinaryOperatorParselet[TOKEN`LONGNAME`UPTEE, PRECEDENCE`LONGNAME`UPTEE, ASSOCIATIVITY`LEFT]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNTEE] = BinaryOperatorParselet[TOKEN`LONGNAME`DOWNTEE, PRECEDENCE`LONGNAME`DOWNTEE, ASSOCIATIVITY`LEFT]


(*
Infix

Note that these are the operators that make sense to be infix in WL source code.

These may not necessarily correspond to Flat functions in WL.
*)
InfixOperatorToParselet[TOKEN`MINUS] = InfixOperatorParselet[TOKEN`MINUS, PRECEDENCE`INFIX`MINUS]
InfixOperatorToParselet[TOKEN`EQUALEQUALEQUAL] = InfixOperatorParselet[TOKEN`EQUALEQUALEQUAL, PRECEDENCE`EQUALEQUALEQUAL]
InfixOperatorToParselet[TOKEN`EQUALBANGEQUAL] = InfixOperatorParselet[TOKEN`EQUALBANGEQUAL, PRECEDENCE`EQUALBANGEQUAL]
InfixOperatorToParselet[TOKEN`PLUS] = InfixOperatorParselet[TOKEN`PLUS, PRECEDENCE`INFIX`PLUS]
InfixOperatorToParselet[TOKEN`STAR] = InfixOperatorParselet[TOKEN`STAR, PRECEDENCE`STAR]
InfixOperatorToParselet[TOKEN`DOT] = InfixOperatorParselet[TOKEN`DOT, PRECEDENCE`DOT]
InfixOperatorToParselet[TOKEN`STARSTAR] = InfixOperatorParselet[TOKEN`STARSTAR, PRECEDENCE`STARSTAR]
InfixOperatorToParselet[TOKEN`AMPAMP] = InfixOperatorParselet[TOKEN`AMPAMP, PRECEDENCE`AMPAMP]
InfixOperatorToParselet[TOKEN`BARBAR] = InfixOperatorParselet[TOKEN`BARBAR, PRECEDENCE`BARBAR]
InfixOperatorToParselet[TOKEN`BAR] = InfixOperatorParselet[TOKEN`BAR, PRECEDENCE`BAR]
InfixOperatorToParselet[TOKEN`LESSGREATER] = InfixOperatorParselet[TOKEN`LESSGREATER, PRECEDENCE`LESSGREATER]
InfixOperatorToParselet[TOKEN`TILDETILDE] = InfixOperatorParselet[TOKEN`TILDETILDE, PRECEDENCE`TILDETILDE]
InfixOperatorToParselet[TOKEN`ATSTAR] = InfixOperatorParselet[TOKEN`ATSTAR, PRECEDENCE`ATSTAR]
InfixOperatorToParselet[TOKEN`SLASHSTAR] = InfixOperatorParselet[TOKEN`SLASHSTAR, PRECEDENCE`SLASHSTAR]

(*
Set relations
*)
InfixOperatorToParselet[TOKEN`LONGNAME`ELEMENT] = InfixOperatorParselet[TOKEN`LONGNAME`ELEMENT, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUBSET] = InfixOperatorParselet[TOKEN`LONGNAME`SUBSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUPERSET] = InfixOperatorParselet[TOKEN`LONGNAME`SUPERSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUBSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`SUBSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUPERSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`SUPERSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTELEMENT] = InfixOperatorParselet[TOKEN`LONGNAME`NOTELEMENT, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUBSET] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUBSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUPERSET] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUPERSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUBSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUBSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUPERSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUPERSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SQUARESUBSET] = InfixOperatorParselet[TOKEN`LONGNAME`SQUARESUBSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SQUARESUPERSET] = InfixOperatorParselet[TOKEN`LONGNAME`SQUARESUPERSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSQUARESUBSET] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSQUARESUBSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSQUARESUPERSET] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSQUARESUPERSET, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SQUARESUBSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`SQUARESUBSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`SQUARESUPERSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`SQUARESUPERSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSQUARESUBSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSQUARESUBSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSQUARESUPERSETEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSQUARESUPERSETEQUAL, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`REVERSEELEMENT] = InfixOperatorParselet[TOKEN`LONGNAME`REVERSEELEMENT, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTREVERSEELEMENT] = InfixOperatorParselet[TOKEN`LONGNAME`NOTREVERSEELEMENT, PRECEDENCE`CLASS`SETRELATIONS]
InfixOperatorToParselet[TOKEN`LONGNAME`DISTRIBUTED] = InfixOperatorParselet[TOKEN`LONGNAME`DISTRIBUTED, PRECEDENCE`CLASS`SETRELATIONS]

InfixOperatorToParselet[TOKEN`LONGNAME`IMPLICITPLUS] = InfixOperatorParselet[TOKEN`LONGNAME`IMPLICITPLUS, PRECEDENCE`LONGNAME`IMPLICITPLUS]
InfixOperatorToParselet[TOKEN`LONGNAME`TIMES] = InfixOperatorParselet[TOKEN`LONGNAME`TIMES, PRECEDENCE`LONGNAME`TIMES]
InfixOperatorToParselet[TOKEN`LONGNAME`INVISIBLETIMES] = InfixOperatorParselet[TOKEN`LONGNAME`INVISIBLETIMES, PRECEDENCE`LONGNAME`INVISIBLETIMES]
InfixOperatorToParselet[TOKEN`LONGNAME`AND] = InfixOperatorParselet[TOKEN`LONGNAME`AND, PRECEDENCE`LONGNAME`AND]
InfixOperatorToParselet[TOKEN`LONGNAME`OR] = InfixOperatorParselet[TOKEN`LONGNAME`OR, PRECEDENCE`LONGNAME`OR]
InfixOperatorToParselet[TOKEN`LONGNAME`XOR] = InfixOperatorParselet[TOKEN`LONGNAME`XOR, PRECEDENCE`LONGNAME`XOR]
InfixOperatorToParselet[TOKEN`LONGNAME`NAND] = InfixOperatorParselet[TOKEN`LONGNAME`NAND, PRECEDENCE`LONGNAME`NAND]
InfixOperatorToParselet[TOKEN`LONGNAME`NOR] = InfixOperatorParselet[TOKEN`LONGNAME`NOR, PRECEDENCE`LONGNAME`NOR]

(*
Horizontal arrows
*)
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTRIGHTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTTEEARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTTEEARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTTEEARROW] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTTEEARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTARROWLEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTARROWLEFTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTARROWRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTARROWRIGHTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLELEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLELEFTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLERIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLERIGHTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLELEFTRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLELEFTRIGHTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTARROWBAR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTARROWBAR, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTARROWBAR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTARROWBAR, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`SHORTRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`SHORTRIGHTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]
InfixOperatorToParselet[TOKEN`LONGNAME`SHORTLEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`SHORTLEFTARROW, PRECEDENCE`CLASS`HORIZONTALARROWS]

(*
Diagonal arrow operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`UPPERLEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`UPPERLEFTARROW, PRECEDENCE`CLASS`DIAGONALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UPPERRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`UPPERRIGHTARROW, PRECEDENCE`CLASS`DIAGONALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LOWERRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LOWERRIGHTARROW, PRECEDENCE`CLASS`DIAGONALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LOWERLEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LOWERLEFTARROW, PRECEDENCE`CLASS`DIAGONALARROWOPERATORS]

(*
Vector operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTRIGHTVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTRIGHTVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTVECTORBAR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTVECTORBAR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTTEEVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTTEEVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNLEFTVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNLEFTVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNRIGHTVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNRIGHTVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNLEFTRIGHTVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNLEFTRIGHTVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNLEFTVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNLEFTVECTORBAR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNRIGHTVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNRIGHTVECTORBAR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNLEFTTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNLEFTTEEVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNRIGHTTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNRIGHTTEEVECTOR, PRECEDENCE`CLASS`VECTOROPERATORS]

(*
Vertical arrow operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`UPARROW] = InfixOperatorParselet[TOKEN`LONGNAME`UPARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UPDOWNARROW] = InfixOperatorParselet[TOKEN`LONGNAME`UPDOWNARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UPTEEARROW] = InfixOperatorParselet[TOKEN`LONGNAME`UPTEEARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNTEEARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNTEEARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UPARROWDOWNARROW] = InfixOperatorParselet[TOKEN`LONGNAME`UPARROWDOWNARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLEUPARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLEUPARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLEDOWNARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLEDOWNARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLEUPDOWNARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLEUPDOWNARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNARROWUPARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNARROWUPARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LONGLEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LONGLEFTARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LONGRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LONGRIGHTARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LONGLEFTRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`LONGLEFTRIGHTARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLELONGLEFTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLELONGLEFTARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLELONGRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLELONGRIGHTARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLELONGLEFTRIGHTARROW] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLELONGLEFTRIGHTARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UPARROWBAR] = InfixOperatorParselet[TOKEN`LONGNAME`UPARROWBAR, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOWNARROWBAR] = InfixOperatorParselet[TOKEN`LONGNAME`DOWNARROWBAR, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SHORTUPARROW] = InfixOperatorParselet[TOKEN`LONGNAME`SHORTUPARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SHORTDOWNARROW] = InfixOperatorParselet[TOKEN`LONGNAME`SHORTDOWNARROW, PRECEDENCE`CLASS`VERTICALARROWOPERATORS]


(*
Vertical vector operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTUPVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTUPVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTUPVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTUPVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTDOWNVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTDOWNVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTDOWNVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTDOWNVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTUPDOWNVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTUPDOWNVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTUPDOWNVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTUPDOWNVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTUPVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTUPVECTORBAR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTDOWNVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTDOWNVECTORBAR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTUPVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTUPVECTORBAR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTDOWNVECTORBAR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTDOWNVECTORBAR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTUPTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTUPTEEVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTDOWNTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTDOWNTEEVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTUPTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTUPTEEVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTDOWNTEEVECTOR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTDOWNTEEVECTOR, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UPEQUILIBRIUM] = InfixOperatorParselet[TOKEN`LONGNAME`UPEQUILIBRIUM, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`REVERSEUPEQUILIBRIUM] = InfixOperatorParselet[TOKEN`LONGNAME`REVERSEUPEQUILIBRIUM, PRECEDENCE`CLASS`VERTICALVECTOROPERATORS]


InfixOperatorToParselet[TOKEN`LONGNAME`CENTERDOT] = InfixOperatorParselet[TOKEN`LONGNAME`CENTERDOT, PRECEDENCE`LONGNAME`CENTERDOT]
InfixOperatorToParselet[TOKEN`LONGNAME`EQUIVALENT] = InfixOperatorParselet[TOKEN`LONGNAME`EQUIVALENT, PRECEDENCE`LONGNAME`EQUIVALENT]
InfixOperatorToParselet[TOKEN`LONGNAME`CIRCLEDOT] = InfixOperatorParselet[TOKEN`LONGNAME`CIRCLEDOT, PRECEDENCE`LONGNAME`CIRCLEDOT]
InfixOperatorToParselet[TOKEN`LONGNAME`CONDITIONED] = InfixOperatorParselet[TOKEN`LONGNAME`CONDITIONED, PRECEDENCE`LONGNAME`CONDITIONED]

(*
Union operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`UNION] = InfixOperatorParselet[TOKEN`LONGNAME`UNION, PRECEDENCE`CLASS`UNIONOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SQUAREUNION] = InfixOperatorParselet[TOKEN`LONGNAME`SQUAREUNION, PRECEDENCE`CLASS`UNIONOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`UNIONPLUS] = InfixOperatorParselet[TOKEN`LONGNAME`UNIONPLUS, PRECEDENCE`CLASS`UNIONOPERATORS]

(*
Intersection operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`INTERSECTION] = InfixOperatorParselet[TOKEN`LONGNAME`INTERSECTION, PRECEDENCE`CLASS`INTERSECTIONOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SQUAREINTERSECTION] = InfixOperatorParselet[TOKEN`LONGNAME`SQUAREINTERSECTION, PRECEDENCE`CLASS`INTERSECTIONOPERATORS]


InfixOperatorToParselet[TOKEN`LONGNAME`TENSORWEDGE] = InfixOperatorParselet[TOKEN`LONGNAME`TENSORWEDGE, PRECEDENCE`LONGNAME`TENSORWEDGE]
InfixOperatorToParselet[TOKEN`LONGNAME`TENSORPRODUCT] = InfixOperatorParselet[TOKEN`LONGNAME`TENSORPRODUCT, PRECEDENCE`LONGNAME`TENSORPRODUCT]
InfixOperatorToParselet[TOKEN`LONGNAME`CROSS] = InfixOperatorParselet[TOKEN`LONGNAME`CROSS, PRECEDENCE`LONGNAME`CROSS]
InfixOperatorToParselet[TOKEN`LONGNAME`SMALLCIRCLE] = InfixOperatorParselet[TOKEN`LONGNAME`SMALLCIRCLE, PRECEDENCE`LONGNAME`SMALLCIRCLE]
InfixOperatorToParselet[TOKEN`LONGNAME`DIVIDES] = InfixOperatorParselet[TOKEN`LONGNAME`DIVIDES, PRECEDENCE`LONGNAME`DIVIDES]
InfixOperatorToParselet[TOKEN`LONGNAME`VERTICALSEPARATOR] = InfixOperatorParselet[TOKEN`LONGNAME`VERTICALSEPARATOR, PRECEDENCE`LONGNAME`VERTICALSEPARATOR]
InfixOperatorToParselet[TOKEN`LONGNAME`BACKSLASH] = InfixOperatorParselet[TOKEN`LONGNAME`BACKSLASH, PRECEDENCE`LONGNAME`BACKSLASH]
InfixOperatorToParselet[TOKEN`LONGNAME`DIAMOND] = InfixOperatorParselet[TOKEN`LONGNAME`DIAMOND, PRECEDENCE`LONGNAME`DIAMOND]
InfixOperatorToParselet[TOKEN`LONGNAME`WEDGE] = InfixOperatorParselet[TOKEN`LONGNAME`WEDGE, PRECEDENCE`LONGNAME`WEDGE]
InfixOperatorToParselet[TOKEN`LONGNAME`VEE] = InfixOperatorParselet[TOKEN`LONGNAME`VEE, PRECEDENCE`LONGNAME`VEE]
InfixOperatorToParselet[TOKEN`LONGNAME`CIRCLETIMES] = InfixOperatorParselet[TOKEN`LONGNAME`CIRCLETIMES, PRECEDENCE`INFIX`LONGNAME`CIRCLETIMES]
InfixOperatorToParselet[TOKEN`LONGNAME`STAR] = InfixOperatorParselet[TOKEN`LONGNAME`STAR, PRECEDENCE`LONGNAME`STAR]
InfixOperatorToParselet[TOKEN`LONGNAME`VERTICALTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`VERTICALTILDE, PRECEDENCE`LONGNAME`VERTICALTILDE]
InfixOperatorToParselet[TOKEN`LONGNAME`COPRODUCT] = InfixOperatorParselet[TOKEN`LONGNAME`COPRODUCT, PRECEDENCE`INFIX`LONGNAME`COPRODUCT]
InfixOperatorToParselet[TOKEN`LONGNAME`CAP] = InfixOperatorParselet[TOKEN`LONGNAME`CAP, PRECEDENCE`LONGNAME`CAP]
InfixOperatorToParselet[TOKEN`LONGNAME`CUP] = InfixOperatorParselet[TOKEN`LONGNAME`CUP, PRECEDENCE`LONGNAME`CUP]
InfixOperatorToParselet[TOKEN`LONGNAME`CIRCLEPLUS] = InfixOperatorParselet[TOKEN`LONGNAME`CIRCLEPLUS, PRECEDENCE`LONGNAME`CIRCLEPLUS]
InfixOperatorToParselet[TOKEN`LONGNAME`VERTICALBAR] = InfixOperatorParselet[TOKEN`LONGNAME`VERTICALBAR, PRECEDENCE`LONGNAME`VERTICALBAR]
InfixOperatorToParselet[TOKEN`LONGNAME`DOUBLEVERTICALBAR] = InfixOperatorParselet[TOKEN`LONGNAME`DOUBLEVERTICALBAR, PRECEDENCE`LONGNAME`DOUBLEVERTICALBAR]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTVERTICALBAR] = InfixOperatorParselet[TOKEN`LONGNAME`NOTVERTICALBAR, PRECEDENCE`LONGNAME`NOTVERTICALBAR]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTDOUBLEVERTICALBAR] = InfixOperatorParselet[TOKEN`LONGNAME`NOTDOUBLEVERTICALBAR, PRECEDENCE`LONGNAME`NOTDOUBLEVERTICALBAR]

(*
Ordering operators
*)
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTTRIANGLE] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTTRIANGLE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTTRIANGLE] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTTRIANGLE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLEFTTRIANGLE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTLEFTTRIANGLE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTRIGHTTRIANGLE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTRIGHTTRIANGLE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTTRIANGLEEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTTRIANGLEEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTTRIANGLEEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTTRIANGLEEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLEFTTRIANGLEEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTLEFTTRIANGLEEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTRIGHTTRIANGLEEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTRIGHTTRIANGLEEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTTRIANGLEBAR] = InfixOperatorParselet[TOKEN`LONGNAME`LEFTTRIANGLEBAR, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`RIGHTTRIANGLEBAR] = InfixOperatorParselet[TOKEN`LONGNAME`RIGHTTRIANGLEBAR, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLEFTTRIANGLEBAR] = InfixOperatorParselet[TOKEN`LONGNAME`NOTLEFTTRIANGLEBAR, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTRIGHTTRIANGLEBAR] = InfixOperatorParselet[TOKEN`LONGNAME`NOTRIGHTTRIANGLEBAR, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`TILDEEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`TILDEEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTTILDEEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTTILDEEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`TILDEFULLEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`TILDEFULLEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTTILDEFULLEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTTILDEFULLEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`TILDE] = InfixOperatorParselet[TOKEN`LONGNAME`TILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`EQUALTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`EQUALTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTEQUALTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTEQUALTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`TILDETILDE] = InfixOperatorParselet[TOKEN`LONGNAME`TILDETILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTTILDETILDE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTTILDETILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`PROPORTIONAL] = InfixOperatorParselet[TOKEN`LONGNAME`PROPORTIONAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`PROPORTION] = InfixOperatorParselet[TOKEN`LONGNAME`PROPORTION, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`CONGRUENT] = InfixOperatorParselet[TOKEN`LONGNAME`CONGRUENT, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTCONGRUENT] = InfixOperatorParselet[TOKEN`LONGNAME`NOTCONGRUENT, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`EQUILIBRIUM] = InfixOperatorParselet[TOKEN`LONGNAME`EQUILIBRIUM, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`REVERSEEQUILIBRIUM] = InfixOperatorParselet[TOKEN`LONGNAME`REVERSEEQUILIBRIUM, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`DOTEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`DOTEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`PRECEDES] = InfixOperatorParselet[TOKEN`LONGNAME`PRECEDES, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUCCEEDS] = InfixOperatorParselet[TOKEN`LONGNAME`SUCCEEDS, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`PRECEDESEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`PRECEDESEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUCCEEDSEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`SUCCEEDSEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`PRECEDESTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`PRECEDESTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUCCEEDSTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`SUCCEEDSTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`PRECEDESSLANTEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`PRECEDESSLANTEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`SUCCEEDSSLANTEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`SUCCEEDSSLANTEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTPRECEDES] = InfixOperatorParselet[TOKEN`LONGNAME`NOTPRECEDES, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUCCEEDS] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUCCEEDS, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTPRECEDESEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTPRECEDESEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUCCEEDSEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUCCEEDSEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTPRECEDESTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTPRECEDESTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUCCEEDSTILDE] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUCCEEDSTILDE, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTPRECEDESSLANTEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTPRECEDESSLANTEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTSUCCEEDSSLANTEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTSUCCEEDSSLANTEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`CUPCAP] = InfixOperatorParselet[TOKEN`LONGNAME`CUPCAP, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTCUPCAP] = InfixOperatorParselet[TOKEN`LONGNAME`NOTCUPCAP, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`HUMPEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`HUMPEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`HUMPDOWNHUMP] = InfixOperatorParselet[TOKEN`LONGNAME`HUMPDOWNHUMP, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTHUMPEQUAL] = InfixOperatorParselet[TOKEN`LONGNAME`NOTHUMPEQUAL, PRECEDENCE`CLASS`ORDERINGOPERATORS]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTHUMPDOWNHUMP] = InfixOperatorParselet[TOKEN`LONGNAME`NOTHUMPDOWNHUMP, PRECEDENCE`CLASS`ORDERINGOPERATORS]


InfixOperatorToParselet[TOKEN`LONGNAME`PERMUTATIONPRODUCT] = InfixOperatorParselet[TOKEN`LONGNAME`PERMUTATIONPRODUCT, PRECEDENCE`LONGNAME`PERMUTATIONPRODUCT]
InfixOperatorToParselet[TOKEN`LONGNAME`COLON] = InfixOperatorParselet[TOKEN`LONGNAME`COLON, PRECEDENCE`LONGNAME`COLON]
InfixOperatorToParselet[TOKEN`LONGNAME`XNOR] = InfixOperatorParselet[TOKEN`LONGNAME`XNOR, PRECEDENCE`LONGNAME`XNOR]
InfixOperatorToParselet[TOKEN`LONGNAME`MINUS] = InfixOperatorParselet[TOKEN`LONGNAME`MINUS, PRECEDENCE`INFIX`LONGNAME`MINUS]
InfixOperatorToParselet[TOKEN`FAKE`IMPLICITTIMES] = InfixOperatorParselet[TOKEN`FAKE`IMPLICITTIMES, PRECEDENCE`STAR]


(*
Postfix
*)
InfixOperatorToParselet[TOKEN`AMP] = PostfixOperatorParselet[TOKEN`AMP, PRECEDENCE`AMP]
InfixOperatorToParselet[TOKEN`DOTDOT] = PostfixOperatorParselet[TOKEN`DOTDOT, PRECEDENCE`DOTDOT]
InfixOperatorToParselet[TOKEN`BANG] = PostfixOperatorParselet[TOKEN`BANG, PRECEDENCE`POSTFIX`BANG]
InfixOperatorToParselet[TOKEN`MINUSMINUS] = PostfixOperatorParselet[TOKEN`MINUSMINUS, PRECEDENCE`POSTFIX`MINUSMINUS]
InfixOperatorToParselet[TOKEN`PLUSPLUS] = PostfixOperatorParselet[TOKEN`PLUSPLUS, PRECEDENCE`POSTFIX`PLUSPLUS]
InfixOperatorToParselet[TOKEN`DOTDOTDOT] = PostfixOperatorParselet[TOKEN`DOTDOTDOT, PRECEDENCE`DOTDOTDOT]
InfixOperatorToParselet[TOKEN`BANGBANG] = PostfixOperatorParselet[TOKEN`BANGBANG, PRECEDENCE`POSTFIX`BANGBANG]
InfixOperatorToParselet[TOKEN`SINGLEQUOTE] = PostfixOperatorParselet[TOKEN`SINGLEQUOTE, PRECEDENCE`SINGLEQUOTE]
InfixOperatorToParselet[TOKEN`LONGNAME`TRANSPOSE] = PostfixOperatorParselet[TOKEN`LONGNAME`TRANSPOSE, PRECEDENCE`LONGNAME`TRANSPOSE]
InfixOperatorToParselet[TOKEN`LONGNAME`CONJUGATE] = PostfixOperatorParselet[TOKEN`LONGNAME`CONJUGATE, PRECEDENCE`LONGNAME`CONJUGATE]
InfixOperatorToParselet[TOKEN`LONGNAME`CONJUGATETRANSPOSE] = PostfixOperatorParselet[TOKEN`LONGNAME`CONJUGATETRANSPOSE, PRECEDENCE`LONGNAME`CONJUGATETRANSPOSE]
InfixOperatorToParselet[TOKEN`LONGNAME`HERMITIANCONJUGATE] = PostfixOperatorParselet[TOKEN`LONGNAME`HERMITIANCONJUGATE, PRECEDENCE`LONGNAME`HERMITIANCONJUGATE]
InfixOperatorToParselet[TOKEN`LONGNAME`INVISIBLEPOSTFIXSCRIPTBASE] = PostfixOperatorParselet[TOKEN`LONGNAME`INVISIBLEPOSTFIXSCRIPTBASE, PRECEDENCE`LONGNAME`INVISIBLEPOSTFIXSCRIPTBASE]


(*
Calls
*)
InfixOperatorToParselet[TOKEN`OPENSQUARE] = CallParselet[GroupParselet[TOKEN`OPENSQUARE]]
InfixOperatorToParselet[TOKEN`LONGNAME`LEFTDOUBLEBRACKET] = CallParselet[GroupParselet[TOKEN`LONGNAME`LEFTDOUBLEBRACKET]]




(*
trailing ; and , is allowed
*)
InfixOperatorToParselet[TOKEN`SEMI] = InfixOperatorWithTrailingParselet[TOKEN`SEMI, PRECEDENCE`SEMI]
InfixOperatorToParselet[TOKEN`COMMA] = InfixOperatorWithTrailingParselet[TOKEN`COMMA, PRECEDENCE`COMMA]
InfixOperatorToParselet[TOKEN`LONGNAME`INVISIBLECOMMA] = InfixOperatorWithTrailingParselet[TOKEN`LONGNAME`INVISIBLECOMMA, PRECEDENCE`LONGNAME`INVISIBLECOMMA]

(*
prefix, infix, postfix
*)
InfixOperatorToParselet[TOKEN`SEMISEMI] = SemiSemiParselet[]

(*
ternary
*)
InfixOperatorToParselet[TOKEN`TILDE] = TildeParselet[]

(*
context sensitive parsing of sym:obj and pat:v
*)
InfixOperatorToParselet[TOKEN`COLON] = ColonParselet[]

(*
ternary, with different possibilities for second operator
*)
InfixOperatorToParselet[TOKEN`SLASHCOLON] = SlashColonParselet[]

(*
Has to handle  a =.  and  a = .
*)
InfixOperatorToParselet[TOKEN`EQUAL] = EqualParselet[TOKEN`EQUAL]
InfixOperatorToParselet[TOKEN`EQUALDOT] = EqualParselet[TOKEN`EQUALDOT]

(*
special Inequality
*)
InfixOperatorToParselet[TOKEN`BANGEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`EQUALEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`GREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`GREATEREQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LESSEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`EQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATEREQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATEREQUALLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATERFULLEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATERGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATERLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATERSLANTEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`GREATERTILDE] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSEQUALGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSFULLEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSSLANTEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LESSTILDE] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`LONGEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NESTEDGREATERGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NESTEDLESSLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATEREQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATERFULLEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATERGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATERLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATERSLANTEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTGREATERTILDE] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESSEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESSFULLEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESSGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESSLESS] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESSSLANTEQUAL] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTLESSTILDE] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTNESTEDGREATERGREATER] = InequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`NOTNESTEDLESSLESS] = InequalityParselet[]

(*
special VectorInequality
*)
InfixOperatorToParselet[TOKEN`LONGNAME`VECTORGREATER] = VectorInequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`VECTORGREATEREQUAL] = VectorInequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`VECTORLESS] = VectorInequalityParselet[]
InfixOperatorToParselet[TOKEN`LONGNAME`VECTORLESSEQUAL] = VectorInequalityParselet[]

(*
stringify next token (as a symbol)
*)
InfixOperatorToParselet[TOKEN`COLONCOLON] = ColonColonParselet[]

(*
stringify next token (as a file)
*)
InfixOperatorToParselet[TOKEN`GREATERGREATER] = GreaterGreaterParselet[]
InfixOperatorToParselet[TOKEN`GREATERGREATERGREATER] = GreaterGreaterGreaterParselet[]


InfixOperatorToParselet[_] = Null





