#
# AFL dictionary for Wolfram Language
# -----------------------------
#
# Created by Brenton Bostick <brenton@wolfram.com>
#

integer_1="1"

real_12="1.2"

symbol_a="a"

string_a="\"a\""

token_dot="."
token_colon=":"
token_openparen="("
token_closeparen=")"
token_opensquare="["
token_closesquare="]"
token_comma=","
token_opencurly="{"
token_closecurly="}"
token_equal="="
token_bang="!"
token_under="_"
token_less="<"
token_greater=">"
token_minus="-"
token_bar="|"
token_semi=";"
token_hash="#"
token_amp="&"
token_slash="/"
token_at="@"
token_plus="+"
token_tilde="~"
token_star="*"
token_caret="^"
token_singlequote="'"
token_percent="%"
token_question="?"
token_dotdot=".."
token_coloncolon="::"
token_colonequal=":="
token_colongreater=":>"
token_equalequal="=="
token_underunder="__"
token_underdot="_."
token_lessbar="<|"
token_lessless="<<"
token_lessgreater="<>"
token_lessequal="<="
token_greatergreater=">>"
token_greaterequal=">="
token_minusgreater="->"
token_minusminus="--"
token_minusequal="-="
token_barbar="||"
token_bargreater="|>"
token_semisemi=";;"
token_ampamp="&&"
token_slashat="/@"
token_slashsemi="/;"
token_slashdot="/."
token_slashslash="//"
token_slashcolon="/:"
token_slashequal="/="
token_slashstar="/*"
token_atat="@@"
token_atstar="@*"
token_plusplus="++"
token_plusequal="+="
token_tildetilde="~~"
token_starequal="*="
token_starstar="**"
token_caretequal="^="
token_hashhash="##"
token_bangequal="!="
token_bangbang="!!"
token_questionquestion="??"
token_dotdotdot="..."
token_equalequalequal="==="
token_equalbangequal="=!="
token_underunderunder="___"
token_slashslashdot="//."
token_atatat="@@@"
token_lessminusgreater="<->"
token_slashslashat="//@"
token_caretcolonequal="^:="
token_greatergreatergreater=">>>"


token_linearsyntax_bang="\\!"
token_linearsyntax_openParen="\\("
token_linearsyntax_star="\\*"
token_linearsyntax_closeParen="\\)"
token_linearsyntax_at="\\@"
token_linearsyntax_caret="\\^"
token_linearsyntax_under="\\_"
token_linearsyntax_percent="\\%"
token_linearsyntax_plus="\\+"
token_linearsyntax_backtick="\\`"
token_linearsyntax_slash="\\/"
token_linearsyntax_amp="\\&"
token_linearsyntax_space="\\ "

