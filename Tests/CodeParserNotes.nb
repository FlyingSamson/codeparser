(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    131738,       3200]
NotebookOptionsPosition[    111584,       2935]
NotebookOutlinePosition[    112516,       2963]
CellTagsIndexPosition[    112473,       2960]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",ExpressionUUID->"3b9a12f6-612d-4a7f-bd5b-2746cc82277c"],

Cell[BoxData[{
 RowBox[{"MaximalBy", ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<abc\>\"", ",", "\"\<Text\>\""}], "]"}]}], "Input",ExpressionUUI\
D->"f3cd21b6-262f-4b8f-b59b-730e67504546"],

Cell[BoxData[
 RowBox[{"Failure", "[", 
  RowBox[{"\"\<ParsingFailure2\>\"", ",", " ", 
   RowBox[{"<|", 
    RowBox[{"\"\<FileName\>\"", " ", "->", " ", "\"\<xx\>\""}], "|>"}]}], 
  "]"}]], "Input",ExpressionUUID->"f31e47a7-9e18-4eef-814a-2fd1863770e0"],

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"3", ",", "\"\<Minutes\>\""}], "]"}]], "Input",ExpressionUUID->\
"9c63491c-f0a5-4f10-97e7-9ab82cfde851"],

Cell[BoxData[
 RowBox[{"FileSize", "[", 
  RowBox[{"$CommandLine", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",ExpressionUUID->"3f70bd3e-\
ac24-48a7-b8dd-8e6085401148"],

Cell[BoxData[
 RowBox[{"1", "/", "0"}]], "Input",ExpressionUUID->"62239515-595e-4721-aa10-408b658dcdf8"],

Cell[CellGroupData[{

Cell["update", "Section",ExpressionUUID->"f2fac607-b107-44be-b828-05790349567f"],

Cell[BoxData[
 RowBox[{"PacletUninstall", "[", "\"\<CodeParser\>\"", "]"}]], "Input",Express\
ionUUID->"1f548012-f673-42fa-a4c5-904b70812485"],

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  "\"\</Users/brenton/development/stash/COD/codeparser/build/paclet/\
CodeParser-999.paclet\>\"", "]"}]], "Input",ExpressionUUID->"40b3a4cf-0fa6-\
4cf7-9b85-034a2b03a753"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "PacletDirectoryAdd", "[", 
   "\"\</Users/brenton/development/stash/COD/codeparser/build/paclet/\
CodeParser\>\"", "]"}], ";"}]], "Input",ExpressionUUID->"ff6424ec-fba2-4d70-\
bb8e-32fd9961c822"],

Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<CodeParser`\>\"", "]"}]], "Input",ExpressionUUID->"cde48957-84fc-4df4-a088-c6fb90b255c6"],

Cell[BoxData[
 RowBox[{"PacletUpdate", "[", 
  RowBox[{"\"\<CodeParser\>\"", ",", 
   RowBox[{"\"\<UpdateSites\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",Expre\
ssionUUID->"5d074520-81f7-4ea5-a147-2d10e28edd42"]
}, Closed]],

Cell[CellGroupData[{

Cell["alphasource Git error", "Section",ExpressionUUID->"76908f4e-9dab-4fea-be31-2264124a7dec"],

Cell["\<\
git remote prune origin

git gc --prune=now

git remote prune origin\
\>", "Program",ExpressionUUID->"6149aca4-3e59-4c4c-b7d7-a4f0c6206c39"]
}, Closed]],

Cell[CellGroupData[{

Cell["build with gcc for -Weffc++ warnings", "Section",ExpressionUUID->"732de3f4-b0f3-4a98-866d-9bdbbf794499"],

Cell["\<\
mkdir build-gcc
cd build-gcc
cmake -DWOLFRAMKERNEL=/Applications/Mathematica110.app/Contents/MacOS/\
WolframKernel -DCMAKE_CXX_COMPILER=/usr/local/bin/g++-8 \
-DCMAKE_C_COMPILER=/usr/local/bin/gcc-8 ..
cmake --build . --target paclet\
\>", "Program",ExpressionUUID->"6971dc0a-1f46-4b15-838b-76bf53b0773a"]
}, Closed]],

Cell[CellGroupData[{

Cell["build with a compilation command database for clang-tidy", "Section",ExpressionUUID->"554acf61-a1e6-4716-ae17-523ef00562d6"],

Cell["\<\
mkdir build-clang-tidy
cd build-clang-tidy
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..\
\>", "Program",ExpressionUUID->"459f0b59-9767-4676-bb5d-cf3bd09cd8be"],

Cell["\<\
generates a compile_commands.json in current directory that clang-tidy uses\
\>", "Text",ExpressionUUID->"bba2df00-6c44-403b-8e17-c8482a067082"],

Cell["\<\
clang-tidy ByteDecoder.cpp
clang-tidy ByteEncoder.cpp
...\
\>", "Program",ExpressionUUID->"2b02edc6-677f-4e17-9ca3-afecb2be4222"]
}, Closed]],

Cell[CellGroupData[{

Cell["build for afl fuzzing", "Section",ExpressionUUID->"f1e33e24-70f6-4ffb-b4f9-ca9d75e167bc"],

Cell["Building AFL for the kernel", "Text",ExpressionUUID->"b90ef25c-28f9-4b7a-9793-7594c080154e"],

Cell["# build llvm", "Text",ExpressionUUID->"adcee32f-abcb-44c7-a176-d03a3b913ba7"],

Cell["\<\
cd llvm-development
mkdir llvm8
cd llvm8
git clone https://github.com/llvm/llvm-project.git

cd llvm-project/

git fetch
git checkout release/8.x

mkdir build

cd build

cmake -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON \
-DLLVM_ENABLE_RTTI=ON -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10 \
-DCMAKE_INSTALL_PREFIX=install \
-DLLVM_ENABLE_PROJECTS=\"clang;libcxx;libcxxabi;lld;compiler-rt\" -G \
\"Ninja\" ../llvm

ninja
ninja install\
\>", "Program",ExpressionUUID->"65bc7b68-c319-4813-92a3-520301172750"],

Cell["# build afl", "Text",ExpressionUUID->"9be0493e-c956-4d19-91ab-bb90f619a8be"],

Cell["\<\

export CC=/Users/brenton/development/llvm-development/llvm800/llvm-project/\
build/install/bin/clang
export CXX=/Users/brenton/development/llvm-development/llvm800/llvm-project/\
build/install/bin/clang++

cd afl-2.5b
CFLAGS=\"-mmacosx-version-min=10.10\" make

cd llvm-mode
export LLVM_CONFIG=/Users/brenton/development/llvm-development/llvm801/llvm-\
project/build/install/bin/llvm-config
CFLAGS=\"-mmacosx-version-min=10.10\" make\
\>", "Program",ExpressionUUID->"e684844f-fee6-4493-95b8-8c64768bdced"],

Cell["# build codeparser", "Text",ExpressionUUID->"00226de5-6a54-4b4c-9f6c-0be3d0e7edf8"],

Cell["\<\

export AFL_CC=/Users/brenton/development/llvm-development/llvm800/llvm-\
project/build/install/bin/clang
export AFL_CXX=/Users/brenton/development/llvm-development/llvm800/llvm-\
project/build/install/bin/clang++

mkdir build-afl
cd build-afl
cmake -DCMAKE_INSTALL_PREFIX=install -DUSE_MATHLINK=OFF -DBUILD_EXE=ON \
-DCMAKE_BUILD_TYPE=Debug \
-DCMAKE_C_COMPILER=/Users/brenton/development/other-development/afl-2.52b/afl-\
clang-fast  \
-DCMAKE_CXX_COMPILER=/Users/brenton/development/other-development/afl-2.52b/\
afl-clang-fast++ ..

cmake --build . --target codeparser-exe

/Users/brenton/development/other-development/afl-2.52b/afl-fuzz -i \
/Users/brenton/development/stash/COD/codeparser/Tests/files/small -o afl_out/ \
-x ../Tests/wl.dict cpp/src/exe/codeparser -n -file @@\
\>", "Program",ExpressionUUID->"0b32bb42-3597-4b0a-87ae-daa813551ad1"]
}, Closed]],

Cell[CellGroupData[{

Cell["build for GCOV", "Section",ExpressionUUID->"2cbce9e4-b2a4-4e68-92ab-c6b36aa3d2a4"],

Cell["\<\
mkdir build-gcc
cd build-gcc

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o API.o -c \
../cpp/src/lib/API.cpp 

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o ByteBuffer.o -c \
../cpp/src/lib/ByteBuffer.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o ByteDecoder.o -c \
../cpp/src/lib/ByteDecoder.cpp 

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o ByteEncoder.o -c \
../cpp/src/lib/ByteEncoder.cpp 

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o CharacterDecoder.o -c \
../cpp/src/lib/CharacterDecoder.cpp 

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Node.o -c \
../cpp/src/lib/Node.cpp 

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Parselet.o -c \
../cpp/src/lib/Parselet.cpp 

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Parser.o -c \
../cpp/src/lib/Parser.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Source.o -c \
../cpp/src/lib/Source.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o SemiSemiParselet.o -c \
../cpp/src/lib/SemiSemiParselet.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Tokenizer.o -c \
../cpp/src/lib/Tokenizer.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Utils.o -c \
../cpp/src/lib/Utils.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o WLCharacter.o -c \
../cpp/src/lib/WLCharacter.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o CharacterMaps.o -c \
../build/generated/cpp/src/lib/CharacterMaps.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Token.o -c \
../cpp/src/lib/Token.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o CodePoint.o -c \
../build/generated/cpp/src/lib/CodePoint.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o Symbol.o -c \
../build/generated/cpp/src/lib/Symbol.cpp

/usr/local/bin/g++-8 --coverage -I ../cpp/include/ \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C -I \
../build/generated/cpp/include/ -std=gnu++11 -o TokenEnum.o -c \
../build/generated/cpp/src/lib/TokenEnum.cpp


/usr/local/bin/g++-8 --coverage -dynamiclib API.o ByteBuffer.o ByteDecoder.o \
ByteEncoder.o CharacterDecoder.o Node.o Parselet.o Parser.o \
SemiSemiParselet.o Source.o Tokenizer.o Utils.o WLCharacter.o CharacterMaps.o \
Token.o CodePoint.o Symbol.o TokenEnum.o \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions -framework mathlink -o AST.dylib


/usr/local/bin/g++-8  -I ../cpp/include -I ../build/generated/cpp/include \
-I/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions \
-I/Applications/Mathematica111.app/Contents/SystemFiles/IncludeFiles/C  \
--coverage   \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions -std=gnu++11 -o main.o -c \
../cpp/src/exe/main.cpp


mkdir Frameworks
cd Frameworks
cp -r /Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions/mathlink.framework .
cd ..

mkdir exe
cd exe
/usr/local/bin/g++-8  --coverage ../main.o  -o ast \
-F/Applications/Mathematica111.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions ../AST.dylib -framework mathlink
cd ..
 
 
exe/ast -file ../Tests/files/carriagereturn.wl > /dev/null
exe/ast -file ../Tests/files/inputs-0003.txt  > /dev/null
exe/ast -file ../Tests/files/inputs-contexts.txt  > /dev/null
exe/ast -file ../Tests/files/inputs-specialchararacters.txt  > /dev/null
exe/ast -file ../Tests/files/linearsyntax.wl > /dev/null
exe/ast -file ../Tests/files/comments.wl > /dev/null
exe/ast -file ../Tests/files/inputs-characternameoperations.txt > /dev/null
exe/ast -file ../Tests/files/inputs-integers.txt > /dev/null
exe/ast -file ../Tests/files/inputs-symbolicarithmetic.txt > /dev/null
exe/ast -file ../Tests/files/package.wl > /dev/null
exe/ast -file ../Tests/files/crash.txt > /dev/null
exe/ast -file ../Tests/files/inputs-characternames.txt > /dev/null
exe/ast -file ../Tests/files/inputs-nestedsymbolicarithmetic.txt > /dev/null
exe/ast -file ../Tests/files/inputs-symbolicarithmetic2.txt > /dev/null
exe/ast -file ../Tests/files/sample.wl > /dev/null
exe/ast -file ../Tests/files/inputs-0001.txt > /dev/null
exe/ast -file ../Tests/files/inputs-characternamestrings.txt > /dev/null
exe/ast -file ../Tests/files/inputs-random.txt > /dev/null
exe/ast -file ../Tests/files/inputs-symbolicarithmetic3.txt > /dev/null
exe/ast -file ../Tests/files/shebangwarning.wl > /dev/null
exe/ast -file ../Tests/files/inputs-0002.txt > /dev/null
exe/ast -file ../Tests/files/inputs-comments.txt > /dev/null
exe/ast -file ../Tests/files/inputs-reals.txt > /dev/null
exe/ast -file ../Tests/files/inputs-symbolicarithmetic4.txt > /dev/null
exe/ast -file ../Tests/files/strange.wl > /dev/null


/usr/local/bin/gcov-8 API.cpp
/usr/local/bin/gcov-8 ByteBuffer.cpp
/usr/local/bin/gcov-8 ByteDecoder.cpp
/usr/local/bin/gcov-8 ByteEncoder.cpp
/usr/local/bin/gcov-8 CharacterDecoder.cpp
/usr/local/bin/gcov-8 Node.cpp
/usr/local/bin/gcov-8 Parselet.cpp
/usr/local/bin/gcov-8 Parser.cpp
/usr/local/bin/gcov-8 SemiSemiParselet.cpp
/usr/local/bin/gcov-8 SyntaxIssue.cpp
/usr/local/bin/gcov-8 Tokenizer.cpp
/usr/local/bin/gcov-8 Utils.cpp
/usr/local/bin/gcov-8 WLCharacter.cpp
/usr/local/bin/gcov-8 CharacterMaps.cpp
/usr/local/bin/gcov-8 Token.cpp
/usr/local/bin/gcov-8 TokenEnum.cpp
/usr/local/bin/gcov-8 CodePoint.cpp
/usr/local/bin/gcov-8 Symbol.cpp
\
\>", "Program",ExpressionUUID->"0faf91a9-e573-44d5-a6d9-16e172f763a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["build for Leak Sanitizing", "Section",ExpressionUUID->"861a6368-2604-4412-8006-7d702d6709cc"],

Cell["\<\
brenton2maclap:build-leak brenton$ \
/Users/brenton/development/llvm-development/llvm900/llvm-project/build/\
install/bin/clang++ -I ../cpp/include -I generated/cpp/include -I \
/Applications/Mathematica121-6495413.app/Contents/SystemFiles/Links/MathLink/\
DeveloperKit/MacOSX-x86-64/CompilerAdditions -I \
/Applications/Mathematica110.app/Contents/SystemFiles/IncludeFiles/C \
-fsanitize=address -g -std=c++11 \
-L/Applications/Mathematica121-6495413.app/Contents/SystemFiles/Links/\
MathLink/DeveloperKit/MacOSX-x86-64/CompilerAdditions/ -lMLi4 -framework \
Foundation ../cpp/src/exe/main.cpp ../cpp/src/lib/API.cpp \
../cpp/src/lib/ByteDecoder.cpp ../cpp/src/lib/ByteEncoder.cpp \
../cpp/src/lib/CharacterDecoder.cpp ../cpp/src/lib/Node.cpp \
../cpp/src/lib/Parselet.cpp ../cpp/src/lib/SemiSemiParselet.cpp \
../cpp/src/lib/Source.cpp ../cpp/src/lib/SourceManager.cpp \
../cpp/src/lib/Token.cpp ../cpp/src/lib/Tokenizer.cpp \
../cpp/src/lib/Utils.cpp generated/cpp/src/lib/CodePoint.cpp \
generated/cpp/src/lib/CharacterMaps.cpp generated/cpp/src/lib/Symbol.cpp \
../cpp/src/lib/Parser.cpp ../cpp/src/lib/WLCharacter.cpp \
generated/cpp/src/lib/TokenEnum.cpp ; ASAN_OPTIONS=detect_leaks=1 ./a.out\
\>", "Program",ExpressionUUID->"947ee0c7-13da-460b-ac68-ccf2332028f7"]
}, Closed]],

Cell[CellGroupData[{

Cell["build with GoogleTest", "Section",ExpressionUUID->"bdf7557a-740f-4df7-88d8-5fd914a4136b"],

Cell["\<\
-DGTEST_ROOT=/Users/brenton/development/github-development/googletest/build/\
install\
\>", "Program",ExpressionUUID->"b0ffb071-32a3-4f09-81a0-46e9f1925903"]
}, Closed]],

Cell[CellGroupData[{

Cell["Init", "Section",ExpressionUUID->"161cd04d-46b3-42df-8427-03d225a20277"],

Cell[BoxData[
 RowBox[{"$MessagePrePrint", "=."}]], "Input",ExpressionUUID->"b2e83e0b-e95c-447a-bc59-7e3423c71e2d"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CodeParser`\>\"", "]"}]], "Input",ExpressionUUID->"231e648e-ad20-45bd-816a-097eda789be8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CodeParser`Private`$Debug", "=", "xTrue"}], ";"}]], "Input",Express\
ionUUID->"614a6dcf-7458-416d-9f32-2695536d9e32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xSetSystemOptions", "[", 
   RowBox[{"\"\<StrictLexicalScoping\>\"", "\[Rule]", "False"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"63e59c24-cb50-42eb-8f08-2fb6eaecaabf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"installation", "=", 
   RowBox[{"$InstallationDirectory", "<>", "\"\</\>\""}]}], ";"}]], "Input",Ex\
pressionUUID->"a930a67f-90a1-4eb7-a8f7-a4b2bd3a6b8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "protos", "=", 
   "\"\</Users/brenton/Library/Mathematica/ApplicationData/StashLink/\
Prototypes/\>\""}], ";"}]], "Input",ExpressionUUID->"080ec075-55fa-4d6e-a4f4-\
057879a07e35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stash", "=", "\"\</Users/brenton/development/stash/\>\""}], 
  ";"}]], "Input",ExpressionUUID->"a56148d3-69d4-4445-ac98-8c52bd99d838"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrependTo", "[", 
   RowBox[{
   "$Path", ",", 
    "\"\</Users/brenton/development/stash/COD/codeparser/Tests/\
CodeParserTestUtils/\>\""}], "]"}], ";"}]], "Input",ExpressionUUID->"9d04b54b-\
1223-4f98-90ed-52e8ee92916c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CodeParserTestUtils`\>\"", "]"}]], "Input",Express\
ionUUID->"13c89e2b-7d5c-45fc-a50e-869549a7e1dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Init: shims", "Section",ExpressionUUID->"601c461f-9459-4182-b0af-d016b463414e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AST`\>\"", "]"}]], "Input",ExpressionUUID->"6bfc3685-8b03-41ef-bca2-171f3c2b47fe"],

Cell[BoxData[
 RowBox[{"AST`Shims`Private`setupStackShim", "[", "]"}]], "Input",ExpressionUU\
ID->"48daef42-b1fe-4734-b481-95a411e9faad"]
}, Closed]],

Cell[CellGroupData[{

Cell["Init: setup LongNames", "Section",ExpressionUUID->"3205a19f-c0bf-461c-86d5-6f0d037e3a69"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AST`\>\"", "]"}]], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"0251412d-9091-44b5-af82-21dcee5489f0"],

Cell[BoxData[
 RowBox[{"AST`Library`SetupLongNames", "[", "]"}]], "Input",
 CellLabel->
  "In[144]:=",ExpressionUUID->"83022c76-d0dc-4c62-a5ec-4de2eb9e74f2"]
}, Closed]],

Cell[CellGroupData[{

Cell["MExprParser", "Section",ExpressionUUID->"a5313d38-6311-4ba8-97de-0a9aabfa9d6d"],

Cell["\<\
ANTLR parser history:
https://cvs-master.wolfram.com/viewvc/RD_HTML/TWJ/LocalWork/Parsers/ExprAST/?\
view=query&branch=&branch_match=exact&dir=&file=&file_match=exact&who=&who_\
match=exact&comment=&comment_match=exact&querysort=date&hours=2&date=all&\
mindate=&maxdate=&limit_changes=\
\>", "Text",ExpressionUUID->"95ea356b-dc74-439b-8957-39d2317b8568"],

Cell["\<\
https://stash.wolfram.com/projects/JAVA/repos/mexprparser/commits\
\>", "Text",ExpressionUUID->"89412427-9bf0-4ac8-8e05-4dc35cd2e7be"]
}, Closed]],

Cell[CellGroupData[{

Cell["other parsers", "Section",ExpressionUUID->"6ab7a4ae-1bf6-4a80-83ca-594ff203de61"],

Cell["\<\
https://github.com/mathics/Mathics/tree/master/mathics/core/parser\
\>", "Text",ExpressionUUID->"54b63754-1007-484a-be71-82cb99e3fca6"],

Cell["https://github.com/rljacobson/FoxySheep", "Text",ExpressionUUID->"68afb54b-0634-4971-8f23-615446ab654f"],

Cell["https://github.com/halirutan/Wolfram-Language-Parser", "Text",ExpressionUUID->"7948c0a0-44e8-4d6c-91f4-a121d8008138"],

Cell["https://gitlab.com/cznic/wl", "Text",ExpressionUUID->"2dd547f6-d46c-4397-8701-b7707350c0b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["other links", "Section",ExpressionUUID->"55e3f2f3-348f-47ed-ae29-38f40d864ae2"],

Cell["\<\
https://www.robertjacobson.dev/defining-the-wolfram-language-part-1-finding-\
operators\
\>", "Text",ExpressionUUID->"271f842e-d17a-418b-95dd-5df93b8c961a"]
}, Closed]],

Cell[CellGroupData[{

Cell["test a single file", "Section",ExpressionUUID->"4f77fe9c-c333-4832-9ab9-e67e4b24c5c6"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"482a061b-464e-4393-9f58-72a8b4f9e6f9"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AST`\>\"", "]"}]], "Input",ExpressionUUID->"f72b54db-6313-4c74-b590-f1ae3e8916d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\</Users/brenton/development/stash/COD/ast/build/test.m\>\""}], 
  ";"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"bfc0801f-c485-4c84-9570-ff400be9d803"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "file", "=", 
   "\"\</Users/brenton/Library/Mathematica/ApplicationData/StashLink/\
Prototypes/CompileUtilities/CompileUtilities/RuntimeChecks/RuntimeChecks.m\>\"\
"}], ";"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"20f62619-030a-48fe-a78f-fef245a5e59e"],

Cell[BoxData[
 RowBox[{"Head", "[", "file", "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"207c69c7-bddf-4b97-8ced-5a5861e54fe3"],

Cell[BoxData[
 RowBox[{"FileByteCount", "[", "file", "]"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"57856420-2e1f-475a-b87b-43e26312256b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"actualCST", "=", 
   RowBox[{"ConcreteParseFile", "[", 
    RowBox[{"file", ",", 
     RowBox[{
      RowBox[{"HoldNode", "[", 
       RowBox[{"Hold", ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"<|", "|>"}]}], "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"a085cd05-c098-426e-817c-02d954a21e9d"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FreeQ", "[", 
     RowBox[{"actualCST", ",", "_SyntaxErrorNode"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<has errors\>\"", "]"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"1b87fecc-7987-491d-978c-890241e5194a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"actualAgg", "=", 
   RowBox[{"AST`Abstract`Aggregate", "[", "actualCST", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"0e0a92e9-b3d1-451f-97ea-3bc29b6b2285"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryString", "=", 
   RowBox[{"ToInputFormString", "[", "actualAgg", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"StringQ", "[", "tryString", "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", "\"\<tryString is not a String\>\"", "]"}], ";"}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"7a54e061-f5f9-4517-96ef-480d668ba606"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FreeQ", "[", 
     RowBox[{"actualAgg", ",", 
      RowBox[{"LeafNode", "[", 
       RowBox[{"Symbol", ",", "\"\<Package\>\"", ",", "_"}], "]"}]}], "]"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tryString", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"tryString", ",", 
       RowBox[{"\"\<Package\>\"", "\[Rule]", "\"\<PackageXXX\>\""}]}], 
      "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"a162fc6c-e957-4fff-83af-fb1021960479"],

Cell[BoxData[
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"tryString", ",", "InputForm"}], "]"}], ",", "Null"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"7fc9feda-d7fd-41a1-8197-9ca074341fc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"text", "=", 
     RowBox[{"FromCharacterCode", "[", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"file", ",", "\"\<Byte\>\""}], "]"}], ",", "\"\<UTF8\>\""}], 
      "]"}]}], ")"}], "//", "FullForm"}], ";"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"902cb213-c854-4bfb-9bd9-a51299b01123"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FreeQ", "[", 
     RowBox[{"actualCST", ",", 
      RowBox[{"LeafNode", "[", 
       RowBox[{"Symbol", ",", "\"\<Package\>\"", ",", "_"}], "]"}]}], "]"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"text", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"text", ",", 
       RowBox[{"\"\<Package\>\"", "\[Rule]", "\"\<PackageXXX\>\""}]}], 
      "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"6060828e-02fe-4569-a9b0-f6630611ec5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expected", "=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"text", ",", "InputForm", ",", "Hold"}], "]"}], ",", "Null"}], 
     "]"}]}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"09b5fb39-d2ec-4fbd-b09b-bee73d31180b"],

Cell[BoxData[
 RowBox[{"actual", "===", "expected"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"de035e2b-e4ba-462a-b322-988439d092bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Abstract", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"actualAST", "=", 
    RowBox[{"AST`Abstract`Abstract", "[", "actualAgg", "]"}]}], 
   ";"}]}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"651132f4-639a-4894-923b-ddf12785d45a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryString", "=", 
   RowBox[{"ToFullFormString", "[", "actualAST", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"StringQ", "[", "tryString", "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Print", "[", "tryString", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quit", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"a8faab13-8e4e-4002-ba25-463ff818fb5c"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FreeQ", "[", 
     RowBox[{"actualAST", ",", 
      RowBox[{"LeafNode", "[", 
       RowBox[{"Symbol", ",", "\"\<Package\>\"", ",", "_"}], "]"}]}], "]"}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tryString", "=", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"tryString", ",", 
       RowBox[{"\"\<Package\>\"", "\[Rule]", "\"\<PackageXXX\>\""}]}], 
      "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"1c42d81d-9967-4377-aa78-4deacdeec3d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"actual", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"tryString", ",", "InputForm"}], "]"}], ",", "Null"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"53e7578d-9876-486b-8edb-79d7235b7a65"],

Cell[BoxData[
 RowBox[{"actual", "===", "expected"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"dd363c4c-72aa-4f08-8792-711f58760837"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expected", "=", "$LastFailedExpected"}], ";"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"aff28738-a95c-472a-a763-89c317646ef7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"actual", "=", "$LastFailedActual"}], ";"}]], "Input",
 CellLabel->
  "In[133]:=",ExpressionUUID->"b2b68146-6ca1-4efb-bbbe-c10b8f5fc71c"],

Cell[BoxData[
 RowBox[{"Length", "[", "expected", "]"}]], "Input",
 CellLabel->
  "In[149]:=",ExpressionUUID->"691d3674-b296-4b3c-8eff-fd9d6a75bbdd"],

Cell[BoxData[
 RowBox[{"Length", "[", "actual", "]"}]], "Input",
 CellLabel->
  "In[150]:=",ExpressionUUID->"4d5b64f4-d90a-4ea7-a8b1-cc3fd5269e0e"],

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"expected", ",", 
        RowBox[{"{", "i", "}"}], ",", "Hold"}], "]"}], "===", 
      RowBox[{"Extract", "[", 
       RowBox[{"actual", ",", 
        RowBox[{"{", "i", "}"}], ",", "Hold"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Length", "[", "actual", "]"}], ",", 
         RowBox[{"Length", "[", "expected", "]"}]}], "]"}]}], "}"}]}], "]"}], 
   ",", "False"}], "]"}]], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"3213e571-a97f-4f41-ad6c-1b36290cbf88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"{", "2", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"Extract", "[", 
    RowBox[{"expected", ",", "spec", ",", "Hold"}], "]"}], "//", 
   "FullForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  RowBox[{
   RowBox[{"Extract", "[", 
    RowBox[{"actual", ",", "spec", ",", "Hold"}], "]"}], "//", 
   "FullForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"a", "===", "b"}]}], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"d7305858-031b-48ec-b06e-9f28fe9a3d50"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Pause", "[", "0.01", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"spec", "=", 
     RowBox[{"{", 
      RowBox[{"66", ",", "1", ",", "2", ",", "2", ",", "i"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"a", "=", 
     RowBox[{"Extract", "[", 
      RowBox[{"expected", ",", "spec", ",", "Hold"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"b", "=", 
     RowBox[{"Extract", "[", 
      RowBox[{"actual", ",", "spec", ",", "Hold"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"a", "=!=", "b"}], ",", 
      RowBox[{
       RowBox[{"Print", "[", "i", "]"}], ";", 
       RowBox[{"Break", "[", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"9a1ca96b-0c02-499e-adf3-2e3e6adba93f"],

Cell[BoxData[
 RowBox[{"FilePrint", "[", "file", "]"}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"fb7d7140-2143-4ab3-b72a-8b038bb75034"]
}, Closed]],

Cell[CellGroupData[{

Cell["test all files", "Section",ExpressionUUID->"11d6b8f6-32be-450f-8fe8-86d52e3363c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"prefix", ":=", 
   RowBox[{"stash", "<>", "\"\<QA/\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prefix", ":=", "protos"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "prefix", ":=", "\"\</Users/brenton/development/github-development/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prefix", "=", "installation"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names1", ":=", 
   RowBox[{"FileNames", "[", 
    RowBox[{
     RowBox[{
     "\"\<*.m\>\"", "|", "\"\<*.wl\>\"", "|", "\"\<*.mt\>\"", "|", 
      "\"\<*.mt0\>\"", "|", "\"\<*.wlt\>\""}], 
     RowBox[{"(*", "\"\<*.nb\>\"", "*)"}], ",", "prefix", ",", "Infinity"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names2", ":=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.nb\>\"", ",", "prefix", ",", "Infinity"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"names", "=", 
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{
      "\"\<*.m\>\"", "|", "\"\<*.wl\>\"", "|", "\"\<*.mt\>\"", "|", 
       "\"\<*.mt0\>\"", "|", "\"\<*.wlt\>\"", "|", "\"\<*.wls\>\""}], ",", 
      "prefix", ",", "Infinity"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"names", ",", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{"#", ",", "\"\<.git\>\""}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"names", ",", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{"#", ",", "\"\<CMake\>\""}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"names", "=", 
    RowBox[{"Complement", "[", 
     RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"Directory", ",", " ", 
    RowBox[{"not", " ", "a", " ", "file"}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"StringCases", "[", 
     RowBox[{"names", ",", 
      RowBox[{"StartOfString", "~~", 
       RowBox[{
       "prefix", "<>", 
        "\"\<neuralnetworks/NeuralNetworks/NetTrain.m\>\""}]}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"StringCases", "[", 
     RowBox[{"names", ",", 
      RowBox[{"StartOfString", "~~", 
       RowBox[{"prefix", "<>", "\"\<NeuralNetworks/NetTrain.m\>\""}]}]}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"StringCases", "[", 
     RowBox[{"names", ",", 
      RowBox[{"StartOfString", "~~", 
       RowBox[{
       "prefix", "<>", 
        "\"\<NeuralNetworks/NeuralNetworks/NetTrain.m\>\""}]}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"StringCases", "[", 
     RowBox[{"names", ",", 
      RowBox[{"StartOfString", "~~", 
       RowBox[{
       "prefix", "<>", 
        "\"\<SystemFiles/Components/NeuralNetworks/NetTrain.m\>\""}]}]}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"names", "=", 
    RowBox[{"Complement", "[", 
     RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\[IndentingNewLine]", "weird", "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toDelete", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"StringCases", "[", 
     RowBox[{"names", ",", 
      RowBox[{"StartOfString", "~~", 
       RowBox[{
       "prefix", "<>", 
        "\"\<system/InputOutput/Get/corruptedprefs.m\>\""}]}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "toDelete"}], "]"}]}], ";"}]}], "Input",ExpressionUU\
ID->"7ad6e544-bdbf-4d2a-82a6-39d2b4657e9b"],

Cell[BoxData[{
 RowBox[{"Length", "[", "names", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"FileByteCount", "/@", "names"}], ",", "100", ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}]}], "]"}]}], "Input",\
ExpressionUUID->"cc4c7e72-04fd-428f-abe9-a639728a33e9"],

Cell[BoxData["$ProcessID"], "Input",ExpressionUUID->"c747e489-89a2-4233-947f-9343c0b7430c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$DebugLoop", "=", "xTrue"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$visuals", "=", "xTrue"}], ";"}]}], "Input",ExpressionUUID->\
"466588fc-b15a-41b3-886a-a7cb7ddd9b21"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "CodeParserTestUtils`Private`$DebugTopLevelExpressions", "=", "xTrue"}], 
  ";"}]], "Input",ExpressionUUID->"11a81fbd-740e-44db-9fcf-036df80799d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$minSizeLimit", "=", "0.00*^6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$maxSizeLimit", "=", "5.00*^6"}], ";"}]}], "Input",ExpressionUUID->\
"d9883cb5-124d-4b97-96c8-65f6690f0d5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"start", "=", "1"}], ";"}]], "Input",ExpressionUUID->"3a1c2e3c-fc92-489f-a397-4c5c71245e7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "start"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", "None"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Parsing \>\"", ",", " ", 
    RowBox[{"Length", "[", 
     RowBox[{"names", "[", 
      RowBox[{"[", 
       RowBox[{"start", ";;"}], "]"}], "]"}], "]"}], ",", "\"\< files\>\""}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Current file: \>\"", ",", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"Short", "[", "file", "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Current file size: \>\"", ",", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"FileSize", "[", "file", "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"$visuals", ",", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Current file bytes/s: \>\"", ",", 
      RowBox[{"Dynamic", "[", "bytesPerSecond", "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Current index: \>\"", ",", 
    RowBox[{"Dynamic", "[", "x", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"$visuals", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<concrete\>\"", ",", 
            RowBox[{"Dynamic", "[", 
             TagBox[
              StyleBox[
               RowBox[{"CodeParser", 
                StyleBox["`Library`$ConcreteParseTime",
                 ShowSpecialCharacters->False,
                 ShowStringCharacters->True,
                 NumberMarks->True]}]],
              FullForm], "]"}], ",", 
            RowBox[{"ProgressIndicator", "[", 
             RowBox[{
              RowBox[{
              "Dynamic", "[", "CodeParser`Library`$ConcreteParseProgress", 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "100"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<aggregate\>\"", ",", 
            RowBox[{"Dynamic", "[", 
             TagBox[
              StyleBox["CodeParser`Abstract`$AggregateParseTime",
               ShowSpecialCharacters->False,
               ShowStringCharacters->True,
               NumberMarks->True],
              FullForm], "]"}], ",", 
            RowBox[{"ProgressIndicator", "[", 
             RowBox[{
              RowBox[{
              "Dynamic", "[", "CodeParser`Abstract`$AggregateParseProgress", 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "100"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<abstract\>\"", ",", 
            RowBox[{"Dynamic", "[", 
             TagBox[
              StyleBox["CodeParser`Abstract`$AbstractParseTime",
               ShowSpecialCharacters->False,
               ShowStringCharacters->True,
               NumberMarks->True],
              FullForm], "]"}], ",", 
            RowBox[{"ProgressIndicator", "[", 
             RowBox[{
              RowBox[{
              "Dynamic", "[", "CodeParser`Abstract`$AbstractParseProgress", 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "100"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"PieChart", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "CodeParser`Library`$ConcreteParseTime", ",", 
                 "CodeParser`Abstract`$AggregateParseTime", ",", 
                 "CodeParser`Abstract`$AbstractParseTime"}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
               RowBox[{"ChartLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<concrete\>\"", ",", "\"\<aggregate\>\"", ",", 
                  "\"\<abstract\>\""}], "}"}]}]}], "]"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<overall\>\"", ",", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", 
      RowBox[{"ProgressIndicator", "[", 
       RowBox[{
        RowBox[{"Dynamic", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "]"}]}], "}"}], 
    "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Scan", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"file", "=", "#"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TrueQ", "[", "$DebugLoop", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"x", ",", "\"\< \>\"", ",", "file"}], "]"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"x", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"x", ",", "\"\< \>\"", ",", "file"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"NotebookSave", "[", 
           RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"CodeParser`Library`$ConcreteParseProgress", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"0", ",", "\"\<Seconds\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CodeParser`Abstract`$AggregateParseProgress", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"0", ",", "\"\<Seconds\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CodeParser`Abstract`$AbstractParseProgress", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"0", ",", "\"\<Seconds\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CodeParser`Library`$ConcreteParseTime", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"0", ",", "\"\<Seconds\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CodeParser`Abstract`$AggregateParseTime", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"0", ",", "\"\<Seconds\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CodeParser`Abstract`$AbstractParseTime", "=", 
        RowBox[{"Quantity", "[", 
         RowBox[{"0", ",", "\"\<Seconds\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bytesPerSecond", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"res", "=", 
        RowBox[{"CodeParserTestUtils`parseTest", "[", 
         RowBox[{"#", ",", "x", ",", 
          RowBox[{"\"\<FileNamePrefixPattern\>\"", "\[Rule]", "prefix"}], ",", 
          RowBox[{"\"\<FileSizeLimit\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"$minSizeLimit", ",", "$maxSizeLimit"}], "}"}]}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"implicitTimesTest", "[", 
          RowBox[{"file", ",", "x", ",", 
           RowBox[{"\"\<FileNamePrefixPattern\>\"", "\[Rule]", "prefix"}]}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"res", "=!=", "CodeParserTestUtils`ok"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"$visuals", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"bytesPerSecond", "=", 
              RowBox[{
               RowBox[{"FileSize", "[", "file", "]"}], "/", 
               RowBox[{
               "(", "CodeParser`Library`$ConcreteParseTime", ")"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Pause", "[", "2.0", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "++"}], ";"}], "\[IndentingNewLine]", ")"}], "&"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"names", "[", 
     RowBox[{"[", 
      RowBox[{"start", ";;"}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], "//",
   "AbsoluteTiming"}]}], "Input",ExpressionUUID->"928b0e27-a38d-42a7-a96b-\
61286fb53b2a"]
}, Closed]],

Cell[CellGroupData[{

Cell["test Boxes from WolframLanguageData Documentation Examples", "Section",ExpressionUUID->"16adc0fa-0f77-4bfb-a3bc-7fdfefe87a67"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"810e1d62-b601-48b5-93d4-5ec7a435eab7"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AST`\>\"", "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"c888db9f-1397-44fd-911a-d82315e75f8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}]}], ";"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"250e8ce6-4e62-4d40-96d0-aae3b92bbd82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Debug", "=", "xTrue"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$visuals", "=", "True"}], ";"}]}], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"10ed0a23-ed34-4b9f-87e9-f0fc7b675f80"],

Cell[BoxData[
 RowBox[{"$MessagePrePrint", "=."}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"60fa49ea-d3cf-4098-8f29-32c3dde1215e"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"$visuals", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"{", 
       RowBox[{"name", ",", "nn"}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"ProgressIndicator", "[", 
      RowBox[{
       RowBox[{"Dynamic", "[", "nn", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "]"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"edea71ec-9d3e-4bf0-9e21-daf318ffa66c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"start", "=", "1"}], ";"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"0033576d-c1c6-4de3-867c-bf9178daf3ef"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  "\"\</Users/brenton/development/stash/COD/ast/Tests/ASTTestUtils/Boxes.wl\>\
\"", "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"8fcc865b-e527-44ef-b431-650cfb857f10"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nn", "=", "n"}], ";", "\[IndentingNewLine]", 
    RowBox[{"name", "=", 
     RowBox[{"names", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TrueQ", "[", "$Debug", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"{", 
        RowBox[{"n", ",", "name"}], "}"}], "]"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"n", ",", "name"}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"NotebookSave", "[", 
        RowBox[{"EvaluationNotebook", "[", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"examples", "=", 
     RowBox[{"WolframLanguageData", "[", 
      RowBox[{"name", ",", "\"\<DocumentationBasicExamples\>\""}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"$Debug", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<i: \>\"", ",", "i"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"example", "=", 
        RowBox[{"examples", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"boxes", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Cases", "[", 
          RowBox[{"example", ",", 
           RowBox[{
            RowBox[{"RawBoxes", "[", 
             RowBox[{"Cell", "[", 
              RowBox[{
               RowBox[{"BoxData", "[", "box_", "]"}], ",", "___"}], "]"}], 
             "]"}], "\[RuleDelayed]", "box"}], ",", "2"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"$Debug", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<j: \>\"", ",", "j"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"box", "=", 
           RowBox[{"boxes", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"$Debug", "&&", "xTrue"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<box: \>\"", ",", 
               RowBox[{"box", "//", "InputForm"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"res", "=", 
           RowBox[{"parseBoxTest", "[", 
            RowBox[{"box", ",", "name", ",", "n", ",", "i", ",", "j"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"res", "===", "continue"}], ",", 
            RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"res", "=!=", "Null"}], ",", 
            RowBox[{"Throw", "[", "res", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "boxes", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "examples", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "start", ",", 
     RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"2743950a-bc92-4b00-a1b3-7a0c80709d44"]
}, Closed]],

Cell[CellGroupData[{

Cell["test Boxes from Documentation Notebooks", "Section",ExpressionUUID->"6312daad-17ef-4a92-b762-482cb21570f1"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CodeParser`\>\"", "]"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"18fcc32e-1bca-4599-b5af-f5e63b40b2b3"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  "\"\</Users/brenton/development/stash/COD/codeparser/Tests/\
CodeParserTestUtils/Boxes.wl\>\"", "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"a6e2dc1c-89f6-4e69-8b43-93aa6ade1e8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.nb\>\"", ",", "$InstallationDirectory", ",", "Infinity"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"14880926-2660-4332-a2db-0526aed24bea"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "descendToInputCells", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"descendToInputCells", "[", 
    RowBox[{"Notebook", "[", 
     RowBox[{"cells_List", ",", "___"}], "]"}], "]"}], ":=", 
   RowBox[{"descendToInputCells", "/@", "cells"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{"_String", ",", "_", ",", "___"}], "]"}], "]"}], ":=", 
  "Null"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"TextData", "[", "___", "]"}], ",", "_", ",", "___"}], "]"}], 
   "]"}], ":=", "Null"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"GraphicsData", "[", "___", "]"}], ",", "_", ",", "___"}], "]"}],
    "]"}], ":=", "Null"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"CellGroupData", "[", 
      RowBox[{"cells_List", ",", "_"}], "]"}], ",", "___"}], "]"}], "]"}], ":=", 
  RowBox[{"descendToInputCells", "/@", "cells"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "[", "box_", "]"}], ",", "\"\<Input\>\"", ",", 
     "___"}], "]"}], "]"}], ":=", 
  RowBox[{"Print", "[", 
   RowBox[{"parseBoxTest", "[", 
    RowBox[{"box", ",", "\"\<foo\>\"", ",", "1", ",", "2", ",", "3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "[", "box_", "]"}], ",", "_", ",", "___"}], "]"}], 
   "]"}], ":=", "Null"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"descendToInputCells", "[", "args___", "]"}], ":=", 
  RowBox[{"Throw", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<cannot descend\>\"", ",", 
     RowBox[{"{", "args", "}"}]}], "}"}], "]"}]}]}], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"37daa35e-89fa-4691-8cfd-3a9719e8c216"],

Cell[BoxData[
 RowBox[{"name", "=", 
  RowBox[{"RandomChoice", "[", "names", "]"}]}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"032b89f4-69c6-442c-87b1-62d9c64bb513"],

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"name", ",", 
   RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"8fcecd5b-9cc8-4c95-8fda-24a279d8986f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nb", "=", 
   RowBox[{"NotebookGet", "[", "%", "]"}]}], ";"}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"985c6667-0075-4321-b19f-d35f183fa386"],

Cell[BoxData[
 RowBox[{
  RowBox[{"descendToInputCells", "[", "nb", "]"}], ";"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"c84768d3-46a2-4d25-b500-d5f6d9a27a30"]
}, Closed]],

Cell[CellGroupData[{

Cell["random string testing", "Section",ExpressionUUID->"4143fbc3-5411-46ed-bfd6-dcd361e84b76"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AST`\>\"", "]"}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"6691769d-fd32-45cb-9a4d-e20b660f8251"],

Cell[BoxData["$ProcessID"], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"87952df9-cd0d-4ce8-bd0e-336c0be24a6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"get", "=", 
   RowBox[{
   "Get", "[", 
    "\"\</Users/brenton/development/stash/COD/ast/tables/LongNames.wl\>\"", 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"506b5374-20fb-4cbb-ae93-dd2839186ce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"punct", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"get", ",", 
     RowBox[{
      RowBox[{"#", "\[Equal]", "PunctuationCharacter"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"c409ac0e-d331-40a1-bf46-bb5775bcd364"],

Cell[BoxData[
 RowBox[{
  RowBox[{"raw", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"get", ",", 
     RowBox[{
      RowBox[{"#", "\[Equal]", "RawCharacter"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"47212cc0-d09a-4c4f-b7c5-a1d384097925"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unsupported", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"get", ",", 
     RowBox[{
      RowBox[{"#", "\[Equal]", "UnsupportedCharacter"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"4425d8b3-7205-4644-9309-a35ce9b3e04f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"punctNames", "=", 
   RowBox[{"Keys", "[", "punct", "]"}]}], ";"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"2255e769-151b-4fa8-942d-d43d797f5e47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawNames", "=", 
   RowBox[{"Keys", "[", "raw", "]"}]}], ";"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"a33fa060-077a-4f31-bef7-6b6e70791f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unsupportedNames", "=", 
   RowBox[{"Keys", "[", "unsupported", "]"}]}], ";"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"fdd375e9-2ae2-49c1-aeaf-176932fb9698"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", "punctNames"}], ";"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"42a15e64-fc05-4527-b6de-57488eeb64c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "rawNames"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"96cd9a49-5e43-4295-b053-5499081b9e3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "unsupportedNames"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"71249aba-f081-4e76-823d-e03bed8df9ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dontBother", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<InvisibleComma\>\"", ",", "\"\<Integral\>\"", ",", 
     "\"\<ContourIntegral\>\"", ",", "\"\<DoubleContourIntegral\>\"", ",", 
     "\"\<ClockwiseContourIntegral\>\"", ",", 
     "\"\<CounterClockwiseContourIntegral\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "dontBother"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"6c97a43f-e6ca-4dcf-8db3-7efa490feb12"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"buggy", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ImplicitPlus\>\"", ",", "\[IndentingNewLine]", "\"\<Star\>\"", ",", 
     "\[IndentingNewLine]", "\"\<Coproduct\>\"", ",", "\[IndentingNewLine]", 
     "\"\<LeftDoubleBracket\>\"", ",", "\[IndentingNewLine]", 
     "\"\<DiscretionaryParagraphSeparator\>\"", ",", "\[IndentingNewLine]", 
     "\"\<DiscretionaryLineSeparator\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"buggy", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"c0c955c1-243f-48eb-92ee-99fc4aa0ea4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parseToSymbols", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Infinity\>\"", ",", "\[IndentingNewLine]", "\"\<ImaginaryI\>\"", ",",
      "\[IndentingNewLine]", "\"\<Pi\>\"", ",", "\[IndentingNewLine]", 
     "\"\<ImaginaryJ\>\"", ",", "\[IndentingNewLine]", "\"\<Degree\>\"", ",", 
     "\[IndentingNewLine]", "\"\<ExponentialE\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parseToSymbols", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellLabel->"In[44]:=",ExpressionUUID->"c2176959-9114-4a58-b207-9dfb7e30649f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "buggy"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"d0d9c0f1-6624-4744-af8f-4631c4470044"],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"names", ",", "parseToSymbols"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"a7b99777-2270-4854-9db4-090dddf68c48"],

Cell[BoxData[
 RowBox[{"names", "//", "Length"}]], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"74f67e8e-7b9f-4527-b62d-4752721a9418"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tabProb", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newlineProb", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spaceProb", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"punctProb", "=", "0"}], ";"}]}], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"a4e337b3-6a7d-426a-a475-4d515c159b83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Rule", "@@", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tabProb", ",", "\"\<\\t\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"newlineProb", ",", "\"\<\\n\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\< \>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<!\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<\\\"\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<#\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<$\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<%\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<&\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<'\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<(\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<*\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<+\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<,\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<-\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<.\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\</\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<1\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "\"\<1\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "\"\<1\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<:\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<;\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<=\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<>\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<?\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<@\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<A\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<[\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<\\\\\>\""}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<]\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<^\>\""}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<_\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\"\<`\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<{\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<|\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<}\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<~\>\""}], "}"}]}], "}"}], "~", "Join", "~", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"\"\<\\\\[\>\"", "<>", "#", "<>", "\"\<]\>\""}]}], "}"}], 
          ")"}], "&"}], "/@", "names"}], ")"}]}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"2c136e21-8037-4869-b9d6-33f1851524c0"],

Cell[CellGroupData[{

Cell["test", "Subsection",ExpressionUUID->"41d137c0-505f-4356-8d10-9d7ba282b9d2"],

Cell[BoxData["$ProcessID"], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"e9e9d6c8-ac0e-4a07-a42e-0ed1b7cea8ae"],

Cell["\<\
bug 382766: a . -b cannot be parsed
bug 385771: Inequality (Greater, Less, etc.) operators are absorbed by \
VectorInequality operators
bug 385777: Parsing \\ [Star] and implicit Times is buggy
bug 385784: Context (with no symbol) is silently truncated from RHS of _
bug 365287: ImplicitPlus\
\>", "Text",ExpressionUUID->"44697cad-9ffa-4180-9abc-3e642becb8cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bothFailed", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bothSucceeded", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bug385771", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bug385777", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bug382766", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bug385784", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stringification", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bug365287", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toReport1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toReport2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bad", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"badStrs", "=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellLabel->
  "In[190]:=",ExpressionUUID->"1c090da7-e08d-4d12-a938-7b58f9b3d6d0"],

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<bothFailed\>\"", ",", 
        RowBox[{"Dynamic", "[", 
         TagBox[
          StyleBox["bothFailed",
           ShowSpecialCharacters->False,
           ShowStringCharacters->True,
           NumberMarks->True],
          FullForm], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bothSucceeded\>\"", ",", 
        RowBox[{"Dynamic", "[", 
         TagBox[
          StyleBox["bothSucceeded",
           ShowSpecialCharacters->False,
           ShowStringCharacters->True,
           NumberMarks->True],
          FullForm], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bug385771\>\"", ",", 
        RowBox[{"Dynamic", "[", "bug385771", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bug385777\>\"", ",", 
        RowBox[{"Dynamic", "[", "bug385777", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bug382766\>\"", ",", 
        RowBox[{"Dynamic", "[", "bug382766", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bug385784\>\"", ",", 
        RowBox[{"Dynamic", "[", "bug385784", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<stringification\>\"", ",", 
        RowBox[{"Dynamic", "[", "stringification", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bug365287\>\"", ",", 
        RowBox[{"Dynamic", "[", "bug365287", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<toReport1\>\"", ",", 
        RowBox[{"Dynamic", "[", "toReport1", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<toReport2\>\"", ",", 
        RowBox[{"Dynamic", "[", "toReport2", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<bad\>\"", ",", 
        RowBox[{"Dynamic", "[", "bad", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"PieChart", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log", "[", 
              StyleBox["bothFailed",
               ShowSpecialCharacters->False,
               ShowStringCharacters->True,
               NumberMarks->True], 
              StyleBox["]",
               ShowSpecialCharacters->False,
               ShowStringCharacters->True,
               NumberMarks->True]}], 
             StyleBox[",",
              ShowSpecialCharacters->False,
              ShowStringCharacters->True,
              NumberMarks->True], 
             RowBox[{
              StyleBox["Log",
               ShowSpecialCharacters->False,
               ShowStringCharacters->True,
               NumberMarks->True], 
              StyleBox["[",
               ShowSpecialCharacters->False,
               ShowStringCharacters->True,
               NumberMarks->True], "bothSucceeded", "]"}], ",", 
             RowBox[{"Log", "[", "bug385771", "]"}], ",", 
             RowBox[{"Log", "[", "bug385777", "]"}], ",", 
             RowBox[{"Log", "[", "bug382766", "]"}], ",", 
             RowBox[{"Log", "[", "bug385784", "]"}], ",", 
             RowBox[{"Log", "[", "stringification", "]"}], ",", 
             RowBox[{"Log", "[", "bug365287", "]"}], ",", 
             RowBox[{"Log", "[", "toReport1", "]"}], ",", 
             RowBox[{"Log", "[", "toReport2", "]"}], ",", 
             RowBox[{"Log", "[", "bad", "]"}]}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
           RowBox[{"ChartLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*StyleBox[\"bothFailed\",ShowSpecialCharacters->False,\
ShowStringCharacters->True,NumberMarks->True]\)\>\"", ",", 
              "\"\<bothSucceeded\>\"", ",", "\"\<bug385771\>\"", ",", 
              "\"\<bug385777\>\"", ",", "\"\<bug382766\>\"", ",", 
              "\"\<bug385784\>\"", ",", "\"\<stringification\>\"", ",", 
              "\"\<bug365287\>\"", ",", "\"\<toReport1\>\"", ",", 
              "\"\<toReport2\>\"", ",", "\"\<bad\>\""}], "}"}]}]}], "]"}], 
         "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[202]:=",ExpressionUUID->"659a4754-caf5-4f8b-8ded-c4acd62435ac"],

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"Dynamic", "[", "str", "]"}], "]"}]], "Input",
 CellLabel->
  "In[203]:=",ExpressionUUID->"ace2915f-f673-4d3f-a118-706f0a72f910"],

Cell[BoxData[
 RowBox[{"While", "[", 
  RowBox[{"True", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pause", "[", "0.0", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"str", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{"rules", ",", "15"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
    "str", " ", ">>", " ", 
     "\"\</Users/brenton/development/stash/COD/ast/build/test.m\>\""}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"expr", "=", 
     RowBox[{"Quiet", "[", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"str", ",", "InputForm", ",", "Hold"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"expr", "===", "$Failed"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"test", "=", 
        RowBox[{"ParseString", "[", 
         RowBox[{"str", ",", 
          RowBox[{
           RowBox[{"ContainerNode", "[", 
            RowBox[{"Hold", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"<|", "|>"}]}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"FreeQ", "[", 
             RowBox[{"test", ",", 
              RowBox[{
               RowBox[{"CallNode", "[", 
                RowBox[{
                 RowBox[{"LeafNode", "[", 
                  RowBox[{"Symbol", ",", "\"\<Dot\>\"", ",", "_"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"___", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"CallNode", "[", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", "\"\<Times\>\"", ",", "_"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Integer", ",", "\"\<-1\>\"", ",", "_"}], "]"}], 
                    ",", "_"}], "}"}], ",", "_"}], "]"}], "|", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CallNode", "[", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", 
                    RowBox[{
                    "\"\<Plus\>\"", "|", "\"\<Not\>\"", "|", "\"\<Span\>\""}],
                     ",", "_"}], "]"}], ",", "_", ",", "_"}], "]"}], "|", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PrefixNode", "[", 
                    RowBox[{"Minus", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Token`Minus", ",", "\"\<-\>\"", ",", "_"}], 
                    "]"}], ",", "_"}], "}"}], ",", "_"}], "]"}]}]}], "}"}], 
                 ",", "_"}], "]"}], "|", "\[IndentingNewLine]", 
               RowBox[{"CallNode", "[", 
                RowBox[{
                 RowBox[{"LeafNode", "[", 
                  RowBox[{"Symbol", ",", 
                   RowBox[{"\"\<Put\>\"", "|", "\"\<Get\>\""}], ",", "_"}], 
                  "]"}], ",", "_", ",", "_"}], "]"}]}]}], "]"}]}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"testStr", "=", 
        RowBox[{"ToFullFormString", "[", "test", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "testStr", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"StringFreeQ", "[", 
              RowBox[{"testStr", ",", "\"\<AST`Comma\>\""}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"comma", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"testStr", "=", 
              RowBox[{"Failure", "[", 
               RowBox[{"\"\<CommaFailure\>\"", ",", 
                RowBox[{"<|", "|>"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FailureQ", "[", "testStr", "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"test", ",", 
               RowBox[{"CallNode", "[", 
                RowBox[{
                 RowBox[{"LeafNode", "[", 
                  RowBox[{"Symbol", ",", "\"\<Dot\>\"", ",", "_"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"___", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"CallNode", "[", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", "\"\<Times\>\"", ",", "_"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Integer", ",", "\"\<-1\>\"", ",", "_"}], "]"}], 
                    ",", "_"}], "}"}], ",", "_"}], "]"}], "|", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CallNode", "[", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", 
                    RowBox[{
                    "\"\<Plus\>\"", "|", "\"\<Not\>\"", "|", "\"\<Span\>\""}],
                     ",", "_"}], "]"}], ",", "_", ",", "_"}], "]"}], "|", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PrefixNode", "[", 
                    RowBox[{
                    RowBox[{"Minus", "|", "PreIncrement"}], ",", "_", ",", 
                    "_"}], "]"}], "|", "\[IndentingNewLine]", 
                    RowBox[{"LeafNode", "[", 
                    RowBox[{
                    RowBox[{"Real", "|", "Integer"}], ",", 
                    RowBox[{"s_", "/;", 
                    RowBox[{"StringStartsQ", "[", 
                    RowBox[{"s", ",", "\"\<-\>\""}], "]"}]}], ",", "_"}], 
                    "]"}]}]}], "}"}], ",", "_"}], "]"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"bug382766", "++"}], ";", 
             RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"test", ",", 
               RowBox[{"CallNode", "[", 
                RowBox[{
                 RowBox[{"LeafNode", "[", 
                  RowBox[{"Symbol", ",", 
                   RowBox[{"\"\<Put\>\"", "|", "\"\<Get\>\""}], ",", "_"}], 
                  "]"}], ",", "_", ",", "_"}], "]"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"stringification", "++"}], ";", 
             RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"test", ",", 
               RowBox[{"PostfixNode", "[", 
                RowBox[{"Repeated", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"LeafNode", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"s_", "/;", 
                    RowBox[{"StringContainsQ", "[", 
                    RowBox[{"s", ",", "\"\<^^\>\""}], "]"}]}], ",", "_"}], 
                    "]"}], ",", 
                   RowBox[{"LeafNode", "[", 
                    RowBox[{"Token`DotDot", ",", "\"\<..\>\"", ",", "_"}], 
                    "]"}]}], "}"}], ",", "_"}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"toReport2", "++"}], ";", 
             RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
          "xPrint", "[", "\"\<ToExpression failed; CodeTools succeeded\>\"", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"fullFormStr", "=", "$Failed"}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"bad", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"badStrs", ",", "str"}], "]"}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"bothFailed", "++"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"FreeQ", "[", 
        RowBox[{"expr", ",", "Information", ",", "Infinity", ",", 
         RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"information", "++"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"expr", ",", "_Real", ",", "Infinity", ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"expr", ",", 
           RowBox[{"Get", "|", "MessageName", "|", "Put", "|", "PutAppend"}], 
           ",", "Infinity", ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"expr", ",", "Null", ",", "Infinity", ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"fullFormStr", "=", 
     RowBox[{"ToString", "[", 
      RowBox[{"FullForm", "[", "expr", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"fullFormStr", ",", "\"\<\\\\\\\\\>\""}], "]"}]}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"StringFreeQ", "[", 
        RowBox[{"fullFormStr", ",", "\"\<Developer`VectorInequality\>\""}], 
        "]"}]}], ",", 
      RowBox[{
       RowBox[{"bug385771", "++"}], ";", 
       RowBox[{"Continue", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"test", "=", 
     RowBox[{"ParseString", "[", 
      RowBox[{"str", ",", 
       RowBox[{
        RowBox[{"ContainerNode", "[", 
         RowBox[{"Hold", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"<|", "|>"}]}], "]"}], "&"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"test", ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"CallNode", "[", 
              RowBox[{
               RowBox[{"LeafNode", "[", 
                RowBox[{"Symbol", ",", "\"\<Dot\>\"", ",", "_"}], "]"}], ",", 
               
               RowBox[{"{", 
                RowBox[{"_", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"CallNode", "[", 
                   RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", "\"\<Times\>\"", ",", "_"}], "]"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Integer", ",", "\"\<-1\>\"", ",", "_"}], "]"}], 
                    ",", "_"}], "}"}], ",", "_"}], "]"}], "|", 
                  "\[IndentingNewLine]", 
                  RowBox[{"CallNode", "[", 
                   RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", "\"\<Plus\>\"", ",", "_"}], "]"}], 
                    ",", "_", ",", "_"}], "]"}], "|", "\[IndentingNewLine]", 
                  RowBox[{"PrefixNode", "[", 
                   RowBox[{"Minus", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Token`Minus", ",", "\"\<-\>\"", ",", "_"}], 
                    "]"}], ",", "_"}], "}"}], ",", "_"}], "]"}], "|", 
                  "\[IndentingNewLine]", 
                  RowBox[{"CallNode", "[", 
                   RowBox[{
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Symbol", ",", "\"\<Not\>\"", ",", "_"}], "]"}], 
                    ",", "_", ",", "_"}], "]"}]}]}], "}"}], ",", "_"}], "]"}],
              "|"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"LeafNode", "[", 
            RowBox[{"Token`QuestionQuestion", ",", "\"\<??\>\"", ",", "_"}], 
            "]"}]}], "]"}]}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reals", " ", "can", " ", "print", " ", 
       RowBox[{"differently", ":", "\[IndentingNewLine]", 
        RowBox[{".8", " ", 
         RowBox[{"vs", ".", " ", "0.8"}]}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "etc", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "symbols"}], 
       " ", "can", " ", "print", " ", 
       RowBox[{"differently", ":", "\[IndentingNewLine]", 
        RowBox[{"`a", " ", 
         RowBox[{"vs", ".", " ", "a"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "integers", " ", "can", " ", "print", " ", 
         "differently"}], ":", " ", "0123"}]}]}], "\[IndentingNewLine]", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"testStr", "=", 
     RowBox[{"ToFullFormString", "[", 
      RowBox[{"test", "/.", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"LeafNode", "[", 
           RowBox[{"Real", ",", "r_", ",", "data_"}], "]"}], "\[RuleDelayed]", 
          RowBox[{"LeafNode", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"FullForm", "[", 
              RowBox[{"ToExpression", "[", "r", "]"}], "]"}], "]"}], ",", 
            "data"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LeafNode", "[", 
           RowBox[{"Integer", ",", "i_", ",", "data_"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"LeafNode", "[", 
           RowBox[{"Integer", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{"FullForm", "[", 
              RowBox[{"ToExpression", "[", "i", "]"}], "]"}], "]"}], ",", 
            "data"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LeafNode", "[", 
           RowBox[{"Symbol", ",", "s_", ",", "data_"}], "]"}], ":>", 
          RowBox[{"LeafNode", "[", 
           RowBox[{"Symbol", ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"s", ",", "InputForm", ",", 
              RowBox[{"Function", "[", 
               RowBox[{"xx", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                  RowBox[{"Unevaluated", "[", "xx", "]"}], ",", "InputForm"}],
                  "]"}], ",", 
                RowBox[{"{", "HoldFirst", "}"}]}], "]"}]}], "]"}], ",", 
            "data"}], "]"}]}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FailureQ", "[", "testStr", "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cst", "=", 
        RowBox[{"ConcreteParseString", "[", "str", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"cst", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PatternBlankNode", "[", 
              RowBox[{"PatternBlank", ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", "_", ",", 
                 RowBox[{"LeafNode", "[", 
                  RowBox[{
                  "Token`Error`ExpectedLetterlike", ",", "_", ",", "_"}], 
                  "]"}]}], "}"}], ",", "_"}], "]"}], "|", 
             "\[IndentingNewLine]", 
             RowBox[{"BlankNode", "[", 
              RowBox[{"Blank", ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", 
                 RowBox[{"LeafNode", "[", 
                  RowBox[{
                  "Token`Error`ExpectedLetterlike", ",", "_", ",", "_"}], 
                  "]"}]}], "}"}], ",", "_"}], "]"}], "|", 
             "\[IndentingNewLine]", 
             RowBox[{"BlankSequenceNode", "[", 
              RowBox[{"BlankSequence", ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", 
                 RowBox[{"LeafNode", "[", 
                  RowBox[{
                  "Token`Error`ExpectedLetterlike", ",", "_", ",", "_"}], 
                  "]"}]}], "}"}], ",", "_"}], "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bug385784", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"cst", ",", "\[IndentingNewLine]", 
            RowBox[{"InfixNode", "[", 
             RowBox[{"Plus", ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"LeafNode", "[", 
                  RowBox[{"Real", ",", 
                   RowBox[{"s_", "/;", 
                    RowBox[{"StringMatchQ", "[", 
                    RowBox[{"s", ",", 
                    RowBox[{"___", "~~", "\"\<`\>\""}]}], "]"}]}], ",", "_"}],
                   "]"}], "|", 
                 RowBox[{"InfixNode", "[", 
                  RowBox[{"Times", ",", 
                   RowBox[{"{", 
                    RowBox[{"___", ",", 
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Real", ",", 
                    RowBox[{"s_", "/;", 
                    RowBox[{"StringMatchQ", "[", 
                    RowBox[{"s", ",", 
                    RowBox[{"___", "~~", "\"\<`\>\""}]}], "]"}]}], ",", "_"}],
                     "]"}]}], "}"}], ",", "_"}], "]"}]}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"LeafNode", "[", 
                 RowBox[{
                  RowBox[{"Token`Minus", "|", "Token`Plus"}], ",", "_", ",", 
                  "_"}], "]"}], ",", 
                RowBox[{"InfixNode", "[", 
                 RowBox[{"Times", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"ErrorNode", "[", 
                    RowBox[{
                    "Token`Error`ExpectedOperand", ",", "_", ",", "_"}], 
                    "]"}], ",", 
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Token`Star", ",", "\"\<*\>\"", ",", "_"}], "]"}],
                     ",", "___"}], "}"}], ",", "_"}], "]"}]}], "}"}], ",", 
              "_"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"toReport1", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "xPrint", "[", "\"\<ToExpression succeeded; CodeTools failed\>\"", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"bad", "++"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"badStrs", ",", "str"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"StringFreeQ", "[", 
          RowBox[{"testStr", ",", 
           RowBox[{
           "\"\<\\\\<\>\"", "|", "\"\<\\\\>\>\"", "|", "\"\<\\\\ \>\""}]}], 
          "]"}]}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"testStr", "=!=", "fullFormStr"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cst", "=", 
        RowBox[{"ConcreteParseString", "[", "str", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"cst", ",", 
            RowBox[{"InfixNode", "[", 
             RowBox[{"Star", ",", 
              RowBox[{"{", 
               RowBox[{"___", ",", 
                RowBox[{"InfixNode", "[", 
                 RowBox[{"Times", ",", 
                  RowBox[{"{", 
                   RowBox[{"___", ",", 
                    RowBox[{"LeafNode", "[", 
                    RowBox[{"Token`Fake`ImplicitTimes", ",", "_", ",", "_"}], 
                    "]"}], ",", "___"}], "}"}], ",", "_"}], "]"}], ",", 
                "___"}], "}"}], ",", "_"}], "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bug385777", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"cst", ",", 
            RowBox[{"LeafNode", "[", 
             RowBox[{"Token`LongName`ImplicitPlus", ",", "_", ",", "_"}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bug365287", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Continue", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"xPrint", "[", "\"\<exprs succeeded, but differ\>\"", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"bad", "++"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"badStrs", ",", "str"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"bothSucceeded", "++"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[204]:=",ExpressionUUID->"d1c4c73b-e2dd-49a7-80c6-4b327bb4b08b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["examine", "Subsection",ExpressionUUID->"6a7e0f37-4127-4e93-9089-201f6853a609"],

Cell[BoxData["badStrs"], "Input",
 CellLabel->
  "In[205]:=",ExpressionUUID->"06b74522-8e2c-4f6a-8462-9f76a8952989"],

Cell[BoxData[
 RowBox[{"1`", "-", 
  RowBox[{"*", "2"}]}]], "Input",
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[143]:=",ExpressionUUID->"b47c7ac5-f88d-4abc-9131-fb2207394eef"],

Cell[BoxData["11"], "Input",
 CellLabel->
  "In[162]:=",ExpressionUUID->"3f101ffb-0445-4424-ac72-e2d0d4fd1cf7"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"948a3d84-9a87-4abc-a34b-5d485c25fbbb"],

Cell[BoxData["1"], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"5e85f27c-876c-4513-9d74-4ade1cc8f2cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<2^^.\>\"", ",", "InputForm", ",", "Hold"}], "]"}], "//", 
  "FullForm"}]], "Input",
 CellLabel->
  "In[210]:=",ExpressionUUID->"9ce7c4b2-3034-4a93-9311-936d3df6f560"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<2^^.\>\"", "]"}]], "Input",
 CellLabel->
  "In[211]:=",ExpressionUUID->"432fb6da-0d5a-4f31-aac2-aadff23da8d6"],

Cell[BoxData[{
 RowBox[{"ParseString", "[", "\"\<.1`+*1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToFullFormString", "[", "%", "]"}]}], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"0f5f1989-35a1-4d8c-997e-b9000c04da24"],

Cell[BoxData["str"], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"5b631af2-66dc-49bc-b24f-cc1e83574371"],

Cell[BoxData[
 RowBox[{"test", "/.", 
  RowBox[{
   RowBox[{"LeafNode", "[", 
    RowBox[{"Real", ",", "_", ",", "_"}], "]"}], "\[Rule]", 
   RowBox[{"LeafNode", "[", 
    RowBox[{"Symbol", ",", "\"\<$real\>\"", ",", 
     RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
    "]"}]}]}]], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"7cedb492-9b00-48e3-9f1b-b0d868db8847"],

Cell[BoxData["testStr"], "Input",
 CellLabel->
  "In[231]:=",ExpressionUUID->"02cbbebb-5cfb-48e3-8de6-06cb8c6de778"],

Cell[BoxData[
 RowBox[{"expr", "//", "FullForm"}]], "Input",
 CellLabel->
  "In[232]:=",ExpressionUUID->"d3b7541b-cdc8-4054-b55a-87dc19729de8"],

Cell[BoxData["fullFormStr"], "Input",
 CellLabel->
  "In[220]:=",ExpressionUUID->"0e3439db-71a7-4271-957f-80759dca9d0a"],

Cell[BoxData[{
 RowBox[{"ParseString", "[", "\"\<%a\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToFullFormString", "[", "%", "]"}]}], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"c7e70e8f-4da9-42c5-93b4-a3f93c35f089"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{
   "\"\<\\\\[CapitalDifferentialD]\>\"", ",", "InputForm", ",", "Hold"}], 
   "]"}], "//", "FullForm"}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"4f38fa5e-a9fe-4467-9625-d57642655fd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<a \\\\[Star] b * c\>\"", ",", "InputForm", ",", "Hold"}], 
   "]"}], "//", "FullForm"}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"77582f41-9445-45e5-92f1-3791d1374e56"],

Cell[BoxData[{
 RowBox[{"ParseString", "[", "\"\<\\\\[CapitalDifferentialD] ! a\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToFullFormString", "[", "%", "]"}]}], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"30839c30-d128-45e8-b787-5bbf88379f70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{
   "\"\<\\\\[CapitalDifferentialD] ! a\>\"", ",", "InputForm", ",", "Hold"}], 
   "]"}], "//", "FullForm"}]], "Input",
 CellLabel->
  "In[163]:=",ExpressionUUID->"52c69f04-587c-4232-b566-cd737e26338a"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<\\\\[CapitalDifferentialD]\>\"", 
  "]"}]], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"285ab784-c8bd-42e4-a4eb-84f2680a0b87"],

Cell[BoxData[
 RowBox[{"InfixNode", "[", 
  RowBox[{"Star", ",", 
   RowBox[{"{", 
    RowBox[{"___", ",", 
     RowBox[{"InfixNode", "[", 
      RowBox[{"Times", ",", 
       RowBox[{"{", 
        RowBox[{"___", ",", 
         RowBox[{"LeafNode", "[", 
          RowBox[{"Token`Fake`ImplicitTimes", ",", "_", ",", "_"}], "]"}], 
         ",", "___"}], "}"}], ",", "_"}], "]"}], ",", "___"}], "}"}], ",", 
   "_"}], "]"}]], "Input",ExpressionUUID->"e06e1108-da04-4c88-920a-\
e5329494f371"],

Cell[BoxData[
 RowBox[{"ToExpression", "[", "\"\<a . !b\>\"", "]"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"435b94ee-dbb1-4376-850a-2978d7d4b5b8"],

Cell[BoxData[
 RowBox[{"x", "=", "1"}]], "Input",
 CellLabel->
  "In[174]:=",ExpressionUUID->"4e651f56-003c-4d21-8cbb-379d304acb0f"],

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{"\"\<`x\>\"", ",", "InputForm", ",", 
   RowBox[{"Function", "[", 
    RowBox[{"xx", ",", 
     RowBox[{"ToString", "[", 
      RowBox[{
       RowBox[{"Unevaluated", "[", "xx", "]"}], ",", "InputForm"}], "]"}], 
     ",", 
     RowBox[{"{", "HoldFirst", "}"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"cc0bcb4e-313f-49d9-a305-7a83dbe6d2da"],

Cell[BoxData[{
 RowBox[{"ParseString", "[", "\"\<56`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToFullFormString", "[", "%", "]"}]}], "Input",
 CellLabel->
  "In[203]:=",ExpressionUUID->"1febceb4-4481-4033-a684-00517bf6d0e1"],

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{
   RowBox[{"ToExpression", "[", "56`", "]"}], ",", "InputForm"}], 
  "]"}]], "Input",
 CellLabel->
  "In[205]:=",ExpressionUUID->"f7d5e252-bdf3-4fd4-b48e-8d710137237e"],

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{"FullForm", "[", "56.", "]"}], "]"}]], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"7b356ccc-2a18-4af3-9d06-695244ff11a8"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AST`\>\"", "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"725d6d7e-4c18-48f6-b356-e09e70996e29"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", 
  "\"\<1XD\\\\[NotLessLess]_`6COUGcb$%\>\"", "]"}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"ac4b9e57-6ba1-4e79-8f71-e02619e781ff"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<_Foo`\>\"", "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"4ed52183-2d90-4b6d-a6ba-e18ae0fa8da5"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<a_Foo`\>\"", "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"38ab7921-035a-4b73-a659-63f8db32ac2c"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<a_Foo`\>\"", "]"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"cb7ed073-9265-424c-8d95-f39969a0c86d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{
   "\"\<\[DoubleContourIntegral] a! \[Exists] b\>\"", ",", "InputForm", ",", 
    "Hold"}], "]"}], "//", "FullForm"}]], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"f8370b59-2cb0-4d85-967d-7cc1ca45238c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "ParseString", "[", "\"\<\[DoubleContourIntegral] a! \[Exists] b\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ToFullFormString", "[", "%", "]"}]}], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"185f3a7a-96dd-4cce-831c-c19cc06c1afd"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<a \\\\[ImplicitPlus] \>\"", 
  "]"}]], "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"818db138-ff37-436d-9c83-a49754e12cf0"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "\"\<`A1/_$-1-1`=__`\>\"", 
  "]"}]], "Input",
 CellLabel->
  "In[221]:=",ExpressionUUID->"5d96bbf7-2b7c-4160-a441-e8c34c5fbfbe"],

Cell[BoxData[
 RowBox[{"ConcreteParseString", "[", "]"}]], "Input",ExpressionUUID->"d98c5c14-11d2-4f58-bc32-371596fd8364"],

Cell[BoxData[
 RowBox[{"badStrs", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->
  "In[264]:=",ExpressionUUID->"9f867a4a-c589-4a74-9f1c-6716d1bc55d8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbol Names", "Section",ExpressionUUID->"9f9c514c-0eaa-490f-8ad1-634c45b468a4"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"795f0133-c712-4405-87dd-dde4cdb6acf8"],

Cell[BoxData[{
 RowBox[{"MaximalBy", ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<abc\>\"", ",", "\"\<Text\>\""}], "]"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"23a7e5a3-d2cb-4f5e-9189-e9bb1069987b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"trigger", " ", "autoload", " ", "Failure", " ", "formatting"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Failure", "[", 
   RowBox[{"\"\<ParsingFailure2\>\"", ",", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<FileName\>\"", " ", "->", " ", "\"\<xx\>\""}], "|>"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"1b06413d-df1c-4c4e-8537-93b054389d16"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<CompiledLibrary`\>\"", "]"}], "\n", 
 RowBox[{"Needs", "[", "\"\<PacletManager`\>\"", "]"}]}], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"47ad49e7-5b3e-4e1b-9297-b0144100c8c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"before", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$ContextPath", "=", 
       RowBox[{"{", "\"\<System`\>\"", "}"}]}], "}"}], ",", 
     RowBox[{"Names", "[", "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"6803ad3d-351d-4dcf-84fe-773d4621088c"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<CodeParser`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<CodeParser`CodeAction`\>\"", "]"}]}], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"7586c2f2-2fd8-4a45-bae0-2862bedb1724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"after", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$ContextPath", "=", 
       RowBox[{"{", "\"\<System`\>\"", "}"}]}], "}"}], ",", 
     RowBox[{"Names", "[", "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"b64350ad-ae12-4095-91fe-9025ced77ae2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<CodeParser`*\>\"", "]"}], "//", 
  "Column"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"385b333a-f621-48f3-9945-62655642ca84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uppercaseSymbolQ", "[", "name_String", "]"}], ":=", 
  RowBox[{"UpperCaseQ", "[", 
   RowBox[{"StringTake", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{"name", ",", "\"\<`\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}]}]], "Input",\

 CellLabel->"In[11]:=",ExpressionUUID->"1c37e897-2840-4089-976c-51dbc8120bc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"split", "[", "name_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", "\"\<`\>\""}], "}"}], "&"}], "/@", 
        RowBox[{"Most", "[", "#", "]"}]}], "]"}], ",", 
      RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], "[", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"name", ",", "\"\<`\>\""}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"76abfcc0-1d64-4f12-b38f-135aa1f03f80"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"split", "/@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$ContextPath", "=", 
          RowBox[{"{", "\"\<System`\>\"", "}"}]}], "}"}], ",", 
        RowBox[{"Complement", "[", 
         RowBox[{"after", ",", "before"}], "]"}]}], "]"}], ",", 
      "uppercaseSymbolQ"}], "]"}]}], ",", 
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Right", ",", "Baseline"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"428e5380-d63b-486e-9f1e-41f7f00297f4"]
}, Closed]]
},
WindowSize->{1336, 751},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
TaggingRules->{
 "DocuToolsSettings" -> {
   "ShowMetaDataMessage" -> "False", "$ApplicationName" -> "Coverage", 
    "$LinkBase" -> "Coverage", "$DocumentationDirectory" -> 
    "/Users/brenton/development/codetools/coverage/Coverage/Documentation/\
English/", "$ApplicationDirectory" -> 
    "/Users/brenton/development/codetools/coverage/Coverage"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "ExampleSection" -> {"0" -> Closed}, 
    "PrimaryExamplesSection" -> Closed}},
CellLabelAutoDelete->True,
TrackCellChangeTimes->False,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (February 26, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0564a008-d427-4627-8ff4-412bee3914b3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 107, 1, 30, "Input",ExpressionUUID->"3b9a12f6-612d-4a7f-bd5b-2746cc82277c"],
Cell[668, 23, 221, 4, 52, "Input",ExpressionUUID->"f3cd21b6-262f-4b8f-b59b-730e67504546"],
Cell[892, 29, 254, 5, 30, "Input",ExpressionUUID->"f31e47a7-9e18-4eef-814a-2fd1863770e0"],
Cell[1149, 36, 155, 3, 30, "Input",ExpressionUUID->"9c63491c-f0a5-4f10-97e7-9ab82cfde851"],
Cell[1307, 41, 181, 4, 30, "Input",ExpressionUUID->"3f70bd3e-ac24-48a7-b8dd-8e6085401148"],
Cell[1491, 47, 104, 1, 30, "Input",ExpressionUUID->"62239515-595e-4721-aa10-408b658dcdf8"],
Cell[CellGroupData[{
Cell[1620, 52, 80, 0, 67, "Section",ExpressionUUID->"f2fac607-b107-44be-b828-05790349567f"],
Cell[1703, 54, 142, 2, 30, "Input",ExpressionUUID->"1f548012-f673-42fa-a4c5-904b70812485"],
Cell[1848, 58, 217, 4, 30, "Input",ExpressionUUID->"40b3a4cf-0fa6-4cf7-9b85-034a2b03a753"],
Cell[2068, 64, 233, 6, 30, "Input",ExpressionUUID->"ff6424ec-fba2-4d70-bb8e-32fd9961c822"],
Cell[2304, 72, 134, 1, 30, "Input",ExpressionUUID->"cde48957-84fc-4df4-a088-c6fb90b255c6"],
Cell[2441, 75, 213, 4, 30, "Input",ExpressionUUID->"5d074520-81f7-4ea5-a147-2d10e28edd42"]
}, Closed]],
Cell[CellGroupData[{
Cell[2691, 84, 95, 0, 53, "Section",ExpressionUUID->"76908f4e-9dab-4fea-be31-2264124a7dec"],
Cell[2789, 86, 150, 6, 118, "Program",ExpressionUUID->"6149aca4-3e59-4c4c-b7d7-a4f0c6206c39"]
}, Closed]],
Cell[CellGroupData[{
Cell[2976, 97, 110, 0, 53, "Section",ExpressionUUID->"732de3f4-b0f3-4a98-866d-9bdbbf794499"],
Cell[3089, 99, 315, 7, 118, "Program",ExpressionUUID->"6971dc0a-1f46-4b15-838b-76bf53b0773a"]
}, Closed]],
Cell[CellGroupData[{
Cell[3441, 111, 130, 0, 53, "Section",ExpressionUUID->"554acf61-a1e6-4716-ae17-523ef00562d6"],
Cell[3574, 113, 168, 4, 84, "Program",ExpressionUUID->"459f0b59-9767-4676-bb5d-cf3bd09cd8be"],
Cell[3745, 119, 154, 2, 35, "Text",ExpressionUUID->"bba2df00-6c44-403b-8e17-c8482a067082"],
Cell[3902, 123, 139, 4, 84, "Program",ExpressionUUID->"2b02edc6-677f-4e17-9ca3-afecb2be4222"]
}, Closed]],
Cell[CellGroupData[{
Cell[4078, 132, 95, 0, 53, "Section",ExpressionUUID->"f1e33e24-70f6-4ffb-b4f9-ca9d75e167bc"],
Cell[4176, 134, 98, 0, 35, "Text",ExpressionUUID->"b90ef25c-28f9-4b7a-9793-7594c080154e"],
Cell[4277, 136, 83, 0, 35, "Text",ExpressionUUID->"adcee32f-abcb-44c7-a176-d03a3b913ba7"],
Cell[4363, 138, 515, 23, 356, "Program",ExpressionUUID->"65bc7b68-c319-4813-92a3-520301172750"],
Cell[4881, 163, 82, 0, 35, "Text",ExpressionUUID->"9be0493e-c956-4d19-91ab-bb90f619a8be"],
Cell[4966, 165, 516, 14, 203, "Program",ExpressionUUID->"e684844f-fee6-4493-95b8-8c64768bdced"],
Cell[5485, 181, 89, 0, 35, "Text",ExpressionUUID->"00226de5-6a54-4b4c-9f6c-0be3d0e7edf8"],
Cell[5577, 183, 863, 21, 254, "Program",ExpressionUUID->"0b32bb42-3597-4b0a-87ae-daa813551ad1"]
}, Closed]],
Cell[CellGroupData[{
Cell[6477, 209, 88, 0, 53, "Section",ExpressionUUID->"2cbce9e4-b2a4-4e68-92ab-c6b36aa3d2a4"],
Cell[6568, 211, 12024, 245, 2702, "Program",ExpressionUUID->"0faf91a9-e573-44d5-a6d9-16e172f763a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[18629, 461, 99, 0, 53, "Section",ExpressionUUID->"861a6368-2604-4412-8006-7d702d6709cc"],
Cell[18731, 463, 1281, 20, 169, "Program",ExpressionUUID->"947ee0c7-13da-460b-ac68-ccf2332028f7"]
}, Closed]],
Cell[CellGroupData[{
Cell[20049, 488, 95, 0, 53, "Section",ExpressionUUID->"bdf7557a-740f-4df7-88d8-5fd914a4136b"],
Cell[20147, 490, 167, 3, 50, "Program",ExpressionUUID->"b0ffb071-32a3-4f09-81a0-46e9f1925903"]
}, Closed]],
Cell[CellGroupData[{
Cell[20351, 498, 78, 0, 53, "Section",ExpressionUUID->"161cd04d-46b3-42df-8427-03d225a20277"],
Cell[20432, 500, 115, 1, 30, "Input",ExpressionUUID->"b2e83e0b-e95c-447a-bc59-7e3423c71e2d"],
Cell[20550, 503, 131, 1, 30, "Input",ExpressionUUID->"231e648e-ad20-45bd-816a-097eda789be8"],
Cell[20684, 506, 152, 3, 30, "Input",ExpressionUUID->"614a6dcf-7458-416d-9f32-2695536d9e32"],
Cell[20839, 511, 207, 4, 30, "Input",ExpressionUUID->"63e59c24-cb50-42eb-8f08-2fb6eaecaabf"],
Cell[21049, 517, 189, 4, 30, "Input",ExpressionUUID->"a930a67f-90a1-4eb7-a8f7-a4b2bd3a6b8b"],
Cell[21241, 523, 217, 6, 30, "Input",ExpressionUUID->"080ec075-55fa-4d6e-a4f4-057879a07e35"],
Cell[21461, 531, 169, 3, 30, "Input",ExpressionUUID->"a56148d3-69d4-4445-ac98-8c52bd99d838"],
Cell[21633, 536, 257, 7, 30, "Input",ExpressionUUID->"9d04b54b-1223-4f98-90ed-52e8ee92916c"],
Cell[21893, 545, 142, 2, 30, "Input",ExpressionUUID->"13c89e2b-7d5c-45fc-a50e-869549a7e1dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[22072, 552, 85, 0, 53, "Section",ExpressionUUID->"601c461f-9459-4182-b0af-d016b463414e"],
Cell[22160, 554, 124, 1, 30, "Input",ExpressionUUID->"6bfc3685-8b03-41ef-bca2-171f3c2b47fe"],
Cell[22287, 557, 137, 2, 30, "Input",ExpressionUUID->"48daef42-b1fe-4734-b481-95a411e9faad"]
}, Closed]],
Cell[CellGroupData[{
Cell[22461, 564, 95, 0, 53, "Section",ExpressionUUID->"3205a19f-c0bf-461c-86d5-6f0d037e3a69"],
Cell[22559, 566, 152, 3, 30, "Input",ExpressionUUID->"0251412d-9091-44b5-af82-21dcee5489f0"],
Cell[22714, 571, 157, 3, 30, "Input",ExpressionUUID->"83022c76-d0dc-4c62-a5ec-4de2eb9e74f2"]
}, Closed]],
Cell[CellGroupData[{
Cell[22908, 579, 85, 0, 53, "Section",ExpressionUUID->"a5313d38-6311-4ba8-97de-0a9aabfa9d6d"],
Cell[22996, 581, 364, 6, 104, "Text",ExpressionUUID->"95ea356b-dc74-439b-8957-39d2317b8568"],
Cell[23363, 589, 144, 2, 35, "Text",ExpressionUUID->"89412427-9bf0-4ac8-8e05-4dc35cd2e7be"]
}, Closed]],
Cell[CellGroupData[{
Cell[23544, 596, 87, 0, 53, "Section",ExpressionUUID->"6ab7a4ae-1bf6-4a80-83ca-594ff203de61"],
Cell[23634, 598, 145, 2, 35, "Text",ExpressionUUID->"54b63754-1007-484a-be71-82cb99e3fca6"],
Cell[23782, 602, 110, 0, 35, "Text",ExpressionUUID->"68afb54b-0634-4971-8f23-615446ab654f"],
Cell[23895, 604, 123, 0, 35, "Text",ExpressionUUID->"7948c0a0-44e8-4d6c-91f4-a121d8008138"],
Cell[24021, 606, 98, 0, 35, "Text",ExpressionUUID->"2dd547f6-d46c-4397-8701-b7707350c0b1"]
}, Closed]],
Cell[CellGroupData[{
Cell[24156, 611, 85, 0, 53, "Section",ExpressionUUID->"55e3f2f3-348f-47ed-ae29-38f40d864ae2"],
Cell[24244, 613, 166, 3, 35, "Text",ExpressionUUID->"271f842e-d17a-418b-95dd-5df93b8c961a"]
}, Closed]],
Cell[CellGroupData[{
Cell[24447, 621, 92, 0, 53, "Section",ExpressionUUID->"4f77fe9c-c333-4832-9ab9-e67e4b24c5c6"],
Cell[24542, 623, 131, 2, 29, "Input",ExpressionUUID->"482a061b-464e-4393-9f58-72a8b4f9e6f9"],
Cell[24676, 627, 124, 1, 29, "Input",ExpressionUUID->"f72b54db-6313-4c74-b590-f1ae3e8916d7"],
Cell[24803, 630, 219, 6, 29, "Input",ExpressionUUID->"bfc0801f-c485-4c84-9570-ff400be9d803"],
Cell[25025, 638, 302, 7, 29, "Input",ExpressionUUID->"20f62619-030a-48fe-a78f-fef245a5e59e"],
Cell[25330, 647, 139, 2, 29, "Input",ExpressionUUID->"207c69c7-bddf-4b97-8ced-5a5861e54fe3"],
Cell[25472, 651, 148, 2, 29, "Input",ExpressionUUID->"57856420-2e1f-475a-b87b-43e26312256b"],
Cell[25623, 655, 418, 11, 29, "Input",ExpressionUUID->"a085cd05-c098-426e-817c-02d954a21e9d"],
Cell[26044, 668, 362, 9, 71, "Input",ExpressionUUID->"1b87fecc-7987-491d-978c-890241e5194a"],
Cell[26409, 679, 215, 5, 29, "Input",ExpressionUUID->"0e0a92e9-b3d1-451f-97ea-3bc29b6b2285"],
Cell[26627, 686, 492, 13, 91, "Input",ExpressionUUID->"7a54e061-f5f9-4517-96ef-480d668ba606"],
Cell[27122, 701, 592, 15, 71, "Input",ExpressionUUID->"a162fc6c-e957-4fff-83af-fb1021960479"],
Cell[27717, 718, 306, 8, 29, "Input",ExpressionUUID->"7fc9feda-d7fd-41a1-8197-9ca074341fc3"],
Cell[28026, 728, 379, 10, 29, "Input",ExpressionUUID->"902cb213-c854-4bfb-9bd9-a51299b01123"],
Cell[28408, 740, 582, 15, 71, "Input",ExpressionUUID->"6060828e-02fe-4569-a9b0-f6630611ec5f"],
Cell[28993, 757, 361, 9, 29, "Input",ExpressionUUID->"09b5fb39-d2ec-4fbd-b09b-bee73d31180b"],
Cell[29357, 768, 142, 2, 29, "Input",ExpressionUUID->"de035e2b-e4ba-462a-b322-988439d092bb"],
Cell[29502, 772, 300, 7, 50, "Input",ExpressionUUID->"651132f4-639a-4894-923b-ddf12785d45a"],
Cell[29805, 781, 520, 13, 112, "Input",ExpressionUUID->"a8faab13-8e4e-4002-ba25-463ff818fb5c"],
Cell[30328, 796, 592, 15, 71, "Input",ExpressionUUID->"1c42d81d-9967-4377-aa78-4deacdeec3d0"],
Cell[30923, 813, 306, 8, 29, "Input",ExpressionUUID->"53e7578d-9876-486b-8edb-79d7235b7a65"],
Cell[31232, 823, 142, 2, 29, "Input",ExpressionUUID->"dd363c4c-72aa-4f08-8792-711f58760837"],
Cell[31377, 827, 171, 3, 29, "Input",ExpressionUUID->"aff28738-a95c-472a-a763-89c317646ef7"],
Cell[31551, 832, 171, 4, 29, "Input",ExpressionUUID->"b2b68146-6ca1-4efb-bbbe-c10b8f5fc71c"],
Cell[31725, 838, 149, 3, 29, "Input",ExpressionUUID->"691d3674-b296-4b3c-8eff-fd9d6a75bbdd"],
Cell[31877, 843, 147, 3, 29, "Input",ExpressionUUID->"4d5b64f4-d90a-4ea7-a8b1-cc3fd5269e0e"],
Cell[32027, 848, 708, 20, 29, "Input",ExpressionUUID->"3213e571-a97f-4f41-ad6c-1b36290cbf88"],
Cell[32738, 870, 565, 16, 91, "Input",ExpressionUUID->"d7305858-031b-48ec-b06e-9f28fe9a3d50"],
Cell[33306, 888, 1033, 27, 193, "Input",ExpressionUUID->"9a1ca96b-0c02-499e-adf3-2e3e6adba93f"],
Cell[34342, 917, 144, 2, 29, "Input",ExpressionUUID->"fb7d7140-2143-4ab3-b72a-8b038bb75034"]
}, Closed]],
Cell[CellGroupData[{
Cell[34523, 924, 88, 0, 53, "Section",ExpressionUUID->"11d6b8f6-32be-450f-8fe8-86d52e3363c1"],
Cell[34614, 926, 4809, 139, 640, "Input",ExpressionUUID->"7ad6e544-bdbf-4d2a-82a6-39d2b4657e9b"],
Cell[39426, 1067, 316, 6, 52, "Input",ExpressionUUID->"cc4c7e72-04fd-428f-abe9-a639728a33e9"],
Cell[39745, 1075, 91, 0, 30, "Input",ExpressionUUID->"c747e489-89a2-4233-947f-9343c0b7430c"],
Cell[39839, 1077, 218, 5, 52, "Input",ExpressionUUID->"466588fc-b15a-41b3-886a-a7cb7ddd9b21"],
Cell[40060, 1084, 184, 4, 30, "Input",ExpressionUUID->"11a81fbd-740e-44db-9fcf-036df80799d8"],
Cell[40247, 1090, 230, 5, 52, "Input",ExpressionUUID->"d9883cb5-124d-4b97-96c8-65f6690f0d5d"],
Cell[40480, 1097, 126, 2, 30, "Input",ExpressionUUID->"3a1c2e3c-fc92-489f-a397-4c5c71245e7c"],
Cell[40609, 1101, 9005, 219, 1081, "Input",ExpressionUUID->"928b0e27-a38d-42a7-a96b-61286fb53b2a"]
}, Closed]],
Cell[CellGroupData[{
Cell[49651, 1325, 132, 0, 53, "Section",ExpressionUUID->"16adc0fa-0f77-4bfb-a3bc-7fdfefe87a67"],
Cell[49786, 1327, 131, 2, 29, "Input",ExpressionUUID->"810e1d62-b601-48b5-93d4-5ec7a435eab7"],
Cell[49920, 1331, 147, 2, 29, "Input",ExpressionUUID->"c888db9f-1397-44fd-911a-d82315e75f8b"],
Cell[50070, 1335, 198, 4, 29, "Input",ExpressionUUID->"250e8ce6-4e62-4d40-96d0-aae3b92bbd82"],
Cell[50271, 1341, 235, 5, 50, "Input",ExpressionUUID->"10ed0a23-ed34-4b9f-87e9-f0fc7b675f80"],
Cell[50509, 1348, 139, 2, 29, "Input",ExpressionUUID->"60fa49ea-d3cf-4098-8f29-32c3dde1215e"],
Cell[50651, 1352, 644, 17, 91, "Input",ExpressionUUID->"edea71ec-9d3e-4bf0-9e21-daf318ffa66c"],
Cell[51298, 1371, 150, 3, 29, "Input",ExpressionUUID->"0033576d-c1c6-4de3-867c-bf9178daf3ef"],
Cell[51451, 1376, 215, 4, 29, "Input",ExpressionUUID->"8fcc865b-e527-44ef-b431-650cfb857f10"],
Cell[51669, 1382, 4269, 102, 786, "Input",ExpressionUUID->"2743950a-bc92-4b00-a1b3-7a0c80709d44"]
}, Closed]],
Cell[CellGroupData[{
Cell[55975, 1489, 113, 0, 53, "Section",ExpressionUUID->"6312daad-17ef-4a92-b762-482cb21570f1"],
Cell[56091, 1491, 155, 2, 30, "Input",ExpressionUUID->"18fcc32e-1bca-4599-b5af-f5e63b40b2b3"],
Cell[56249, 1495, 229, 4, 30, "Input",ExpressionUUID->"a6e2dc1c-89f6-4e69-8b43-93aa6ade1e8f"],
Cell[56481, 1501, 266, 6, 30, "Input",ExpressionUUID->"14880926-2660-4332-a2db-0526aed24bea"],
Cell[56750, 1509, 2100, 55, 199, "Input",ExpressionUUID->"37daa35e-89fa-4691-8cfd-3a9719e8c216"],
Cell[58853, 1566, 174, 3, 30, "Input",ExpressionUUID->"032b89f4-69c6-442c-87b1-62d9c64bb513"],
Cell[59030, 1571, 210, 4, 30, "Input",ExpressionUUID->"8fcecd5b-9cc8-4c95-8fda-24a279d8986f"],
Cell[59243, 1577, 186, 4, 30, "Input",ExpressionUUID->"985c6667-0075-4321-b19f-d35f183fa386"],
Cell[59432, 1583, 170, 3, 30, "Input",ExpressionUUID->"c84768d3-46a2-4d25-b500-d5f6d9a27a30"]
}, Closed]],
Cell[CellGroupData[{
Cell[59639, 1591, 95, 0, 53, "Section",ExpressionUUID->"4143fbc3-5411-46ed-bfd6-dcd361e84b76"],
Cell[59737, 1593, 148, 2, 29, "Input",ExpressionUUID->"6691769d-fd32-45cb-9a4d-e20b660f8251"],
Cell[59888, 1597, 115, 1, 29, "Input",ExpressionUUID->"87952df9-cd0d-4ce8-bd0e-336c0be24a6c"],
Cell[60006, 1600, 260, 7, 29, "Input",ExpressionUUID->"506b5374-20fb-4cbb-ae93-dd2839186ce8"],
Cell[60269, 1609, 288, 8, 29, "Input",ExpressionUUID->"c409ac0e-d331-40a1-bf46-bb5775bcd364"],
Cell[60560, 1619, 278, 8, 29, "Input",ExpressionUUID->"47212cc0-d09a-4c4f-b7c5-a1d384097925"],
Cell[60841, 1629, 294, 8, 29, "Input",ExpressionUUID->"4425d8b3-7205-4644-9309-a35ce9b3e04f"],
Cell[61138, 1639, 191, 4, 29, "Input",ExpressionUUID->"2255e769-151b-4fa8-942d-d43d797f5e47"],
Cell[61332, 1645, 187, 4, 29, "Input",ExpressionUUID->"a33fa060-077a-4f31-bef7-6b6e70791f09"],
Cell[61522, 1651, 203, 4, 29, "Input",ExpressionUUID->"fdd375e9-2ae2-49c1-aeaf-176932fb9698"],
Cell[61728, 1657, 159, 3, 29, "Input",ExpressionUUID->"42a15e64-fc05-4527-b6de-57488eeb64c0"],
Cell[61890, 1662, 224, 5, 29, "Input",ExpressionUUID->"96cd9a49-5e43-4295-b053-5499081b9e3f"],
Cell[62117, 1669, 232, 5, 29, "Input",ExpressionUUID->"71249aba-f081-4e76-823d-e03bed8df9ee"],
Cell[62352, 1676, 575, 14, 50, "Input",ExpressionUUID->"6c97a43f-e6ca-4dcf-8db3-7efa490feb12"],
Cell[62930, 1692, 620, 14, 152, "Input",ExpressionUUID->"c0c955c1-243f-48eb-92ee-99fc4aa0ea4d"],
Cell[63553, 1708, 581, 13, 152, "Input",ExpressionUUID->"c2176959-9114-4a58-b207-9dfb7e30649f"],
Cell[64137, 1723, 221, 5, 29, "Input",ExpressionUUID->"d0d9c0f1-6624-4744-af8f-4631c4470044"],
Cell[64361, 1730, 230, 5, 29, "Input",ExpressionUUID->"a7b99777-2270-4854-9db4-090dddf68c48"],
Cell[64594, 1737, 138, 2, 29, "Input",ExpressionUUID->"74f67e8e-7b9f-4527-b62d-4752721a9418"],
Cell[64735, 1741, 384, 9, 91, "Input",ExpressionUUID->"a4e337b3-6a7d-426a-a475-4d515c159b83"],
Cell[65122, 1752, 3742, 95, 234, "Input",ExpressionUUID->"2c136e21-8037-4869-b9d6-33f1851524c0"],
Cell[CellGroupData[{
Cell[68889, 1851, 81, 0, 54, "Subsection",ExpressionUUID->"41d137c0-505f-4356-8d10-9d7ba282b9d2"],
Cell[68973, 1853, 115, 1, 29, "Input",ExpressionUUID->"e9e9d6c8-ac0e-4a07-a42e-0ed1b7cea8ae"],
Cell[69091, 1856, 370, 7, 127, "Text",ExpressionUUID->"44697cad-9ffa-4180-9abc-3e642becb8cf"],
Cell[69464, 1865, 1018, 27, 255, "Input",ExpressionUUID->"1c090da7-e08d-4d12-a938-7b58f9b3d6d0"],
Cell[70485, 1894, 4674, 112, 377, "Input",ExpressionUUID->"659a4754-caf5-4f8b-8ded-c4acd62435ac"],
Cell[75162, 2008, 177, 4, 29, "Input",ExpressionUUID->"ace2915f-f673-4d3f-a118-706f0a72f910"],
Cell[75342, 2014, 24514, 564, 3082, "Input",ExpressionUUID->"d1c4c73b-e2dd-49a7-80c6-4b327bb4b08b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99893, 2583, 84, 0, 54, "Subsection",ExpressionUUID->"6a7e0f37-4127-4e93-9089-201f6853a609"],
Cell[99980, 2585, 116, 2, 29, "Input",ExpressionUUID->"06b74522-8e2c-4f6a-8462-9f76a8952989"],
Cell[100099, 2589, 181, 5, 29, "Input",ExpressionUUID->"b47c7ac5-f88d-4abc-9131-fb2207394eef"],
Cell[100283, 2596, 111, 2, 29, "Input",ExpressionUUID->"3f101ffb-0445-4424-ac72-e2d0d4fd1cf7"],
Cell[100397, 2600, 135, 3, 29, "Input",ExpressionUUID->"948a3d84-9a87-4abc-a34b-5d485c25fbbb"],
Cell[100535, 2605, 105, 1, 29, "Input",ExpressionUUID->"5e85f27c-876c-4513-9d74-4ade1cc8f2cd"],
Cell[100643, 2608, 238, 6, 29, "Input",ExpressionUUID->"9ce7c4b2-3034-4a93-9311-936d3df6f560"],
Cell[100884, 2616, 166, 3, 29, "Input",ExpressionUUID->"432fb6da-0d5a-4f31-aac2-aadff23da8d6"],
Cell[101053, 2621, 232, 4, 50, "Input",ExpressionUUID->"0f5f1989-35a1-4d8c-997e-b9000c04da24"],
Cell[101288, 2627, 112, 2, 29, "Input",ExpressionUUID->"5b631af2-66dc-49bc-b24f-cc1e83574371"],
Cell[101403, 2631, 388, 10, 29, "Input",ExpressionUUID->"7cedb492-9b00-48e3-9f1b-b0d868db8847"],
Cell[101794, 2643, 116, 2, 29, "Input",ExpressionUUID->"02cbbebb-5cfb-48e3-8de6-06cb8c6de778"],
Cell[101913, 2647, 143, 3, 29, "Input",ExpressionUUID->"d3b7541b-cdc8-4054-b55a-87dc19729de8"],
Cell[102059, 2652, 120, 2, 29, "Input",ExpressionUUID->"0e3439db-71a7-4271-957f-80759dca9d0a"],
Cell[102182, 2656, 228, 4, 50, "Input",ExpressionUUID->"c7e70e8f-4da9-42c5-93b4-a3f93c35f089"],
Cell[102413, 2662, 265, 7, 29, "Input",ExpressionUUID->"4f38fa5e-a9fe-4467-9625-d57642655fd1"],
Cell[102681, 2671, 249, 5, 29, "Input",ExpressionUUID->"77582f41-9445-45e5-92f1-3791d1374e56"],
Cell[102933, 2678, 259, 5, 50, "Input",ExpressionUUID->"30839c30-d128-45e8-b787-5bbf88379f70"],
Cell[103195, 2685, 269, 7, 29, "Input",ExpressionUUID->"52c69f04-587c-4232-b566-cd737e26338a"],
Cell[103467, 2694, 191, 4, 29, "Input",ExpressionUUID->"285ab784-c8bd-42e4-a4eb-84f2680a0b87"],
Cell[103661, 2700, 489, 13, 29, "Input",ExpressionUUID->"e06e1108-da04-4c88-920a-e5329494f371"],
Cell[104153, 2715, 157, 2, 29, "Input",ExpressionUUID->"435b94ee-dbb1-4376-850a-2978d7d4b5b8"],
Cell[104313, 2719, 132, 3, 29, "Input",ExpressionUUID->"4e651f56-003c-4d21-8cbb-379d304acb0f"],
Cell[104448, 2724, 427, 11, 29, "Input",ExpressionUUID->"cc0bcb4e-313f-49d9-a305-7a83dbe6d2da"],
Cell[104878, 2737, 229, 4, 50, "Input",ExpressionUUID->"1febceb4-4481-4033-a684-00517bf6d0e1"],
Cell[105110, 2743, 220, 6, 29, "Input",ExpressionUUID->"f7d5e252-bdf3-4fd4-b48e-8d710137237e"],
Cell[105333, 2751, 181, 4, 29, "Input",ExpressionUUID->"7b356ccc-2a18-4af3-9d06-695244ff11a8"],
Cell[105517, 2757, 147, 2, 29, "Input",ExpressionUUID->"725d6d7e-4c18-48f6-b356-e09e70996e29"],
Cell[105667, 2761, 192, 3, 29, "Input",ExpressionUUID->"ac4b9e57-6ba1-4e79-8f71-e02619e781ff"],
Cell[105862, 2766, 163, 2, 29, "Input",ExpressionUUID->"4ed52183-2d90-4b6d-a6ba-e18ae0fa8da5"],
Cell[106028, 2770, 164, 2, 29, "Input",ExpressionUUID->"38ab7921-035a-4b73-a659-63f8db32ac2c"],
Cell[106195, 2774, 164, 2, 29, "Input",ExpressionUUID->"cb7ed073-9265-424c-8d95-f39969a0c86d"],
Cell[106362, 2778, 279, 7, 32, "Input",ExpressionUUID->"f8370b59-2cb0-4d85-967d-7cc1ca45238c"],
Cell[106644, 2787, 290, 7, 52, "Input",ExpressionUUID->"185f3a7a-96dd-4cce-831c-c19cc06c1afd"],
Cell[106937, 2796, 186, 4, 29, "Input",ExpressionUUID->"818db138-ff37-436d-9c83-a49754e12cf0"],
Cell[107126, 2802, 180, 4, 29, "Input",ExpressionUUID->"5d96bbf7-2b7c-4160-a441-e8c34c5fbfbe"],
Cell[107309, 2808, 122, 1, 29, "Input",ExpressionUUID->"d98c5c14-11d2-4f58-bc32-371596fd8364"],
Cell[107434, 2811, 166, 4, 29, "Input",ExpressionUUID->"9f867a4a-c589-4a74-9f1c-6716d1bc55d8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[107649, 2821, 86, 0, 53, "Section",ExpressionUUID->"9f9c514c-0eaa-490f-8ad1-634c45b468a4"],
Cell[107738, 2823, 131, 2, 30, "Input",ExpressionUUID->"795f0133-c712-4405-87dd-dde4cdb6acf8"],
Cell[107872, 2827, 242, 4, 52, "Input",ExpressionUUID->"23a7e5a3-d2cb-4f5e-9189-e9bb1069987b"],
Cell[108117, 2833, 433, 10, 52, "Input",ExpressionUUID->"1b06413d-df1c-4c4e-8537-93b054389d16"],
Cell[108553, 2845, 224, 3, 52, "Input",ExpressionUUID->"47ad49e7-5b3e-4e1b-9297-b0144100c8c7"],
Cell[108780, 2850, 344, 9, 30, "Input",ExpressionUUID->"6803ad3d-351d-4dcf-84fe-773d4621088c"],
Cell[109127, 2861, 244, 3, 52, "Input",ExpressionUUID->"7586c2f2-2fd8-4a45-bae0-2862bedb1724"],
Cell[109374, 2866, 343, 9, 30, "Input",ExpressionUUID->"b64350ad-ae12-4095-91fe-9025ced77ae2"],
Cell[109720, 2877, 188, 4, 30, "Input",ExpressionUUID->"385b333a-f621-48f3-9945-62655642ca84"],
Cell[109911, 2883, 446, 12, 30, "Input",ExpressionUUID->"1c37e897-2840-4089-976c-51dbc8120bc8"],
Cell[110360, 2897, 573, 16, 30, "Input",ExpressionUUID->"76abfcc0-1d64-4f12-b38f-135aa1f03f80"],
Cell[110936, 2915, 632, 17, 30, "Input",ExpressionUUID->"428e5380-d63b-486e-9f1e-41f7f00297f4"]
}, Closed]]
}
]
*)

